/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReserveLogic,
  ReserveLogicInterface,
} from "../../../libraries/logic/ReserveLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityIndex",
        type: "uint256",
      },
    ],
    name: "ReserveDataUpdated",
    type: "event",
  },
];

const _bytecode =
  "0x6103ed610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806388393bbc1461003a575b600080fd5b81801561004657600080fd5b50610061600480360381019061005c91906102a9565b610063565b005b600073ffffffffffffffffffffffffffffffffffffffff168360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600281526020017f33320000000000000000000000000000000000000000000000000000000000008152509061012e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101259190610395565b60405180910390fd5b506101376101fc565b8360010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550818360040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808360050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60006b033b2e3c9fd0803ce8000000905090565b600080fd5b6000819050919050565b61022881610215565b811461023357600080fd5b50565b6000813590506102458161021f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102768261024b565b9050919050565b6102868161026b565b811461029157600080fd5b50565b6000813590506102a38161027d565b92915050565b6000806000606084860312156102c2576102c1610210565b5b60006102d086828701610236565b93505060206102e186828701610294565b92505060406102f286828701610294565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561033657808201518184015260208101905061031b565b83811115610345576000848401525b50505050565b6000601f19601f8301169050919050565b6000610367826102fc565b6103718185610307565b9350610381818560208601610318565b61038a8161034b565b840191505092915050565b600060208201905081810360008301526103af818461035c565b90509291505056fea2646970667358221220d57e871ddacb94359762abed8c1f42a860d5dab6b5805e0e8eacc4b74726513764736f6c63430008090033";

type ReserveLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReserveLogic__factory extends ContractFactory {
  constructor(...args: ReserveLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReserveLogic> {
    return super.deploy(overrides || {}) as Promise<ReserveLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReserveLogic {
    return super.attach(address) as ReserveLogic;
  }
  override connect(signer: Signer): ReserveLogic__factory {
    return super.connect(signer) as ReserveLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveLogicInterface {
    return new utils.Interface(_abi) as ReserveLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReserveLogic {
    return new Contract(address, _abi, signerOrProvider) as ReserveLogic;
  }
}
