/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BaseImmutableAdminUpgradeabilityProxy,
  BaseImmutableAdminUpgradeabilityProxyInterface,
} from "../../../libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516109a03803806109a0833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161086661013a60003960008181610105015281816101730152818161025d015281816102ce01528181610322015261035601526108666000f3fe6080604052600436106100435760003560e01c80633659cfe61461004e5780634f1ef286146100775780635c60da1b14610093578063f851a440146100be57610044565b5b61004c6100e9565b005b34801561005a57600080fd5b5061007560048036038101906100709190610587565b610103565b005b610091600480360381019061008c9190610619565b610171565b005b34801561009f57600080fd5b506100a8610259565b6040516100b59190610688565b60405180910390f35b3480156100ca57600080fd5b506100d36102ca565b6040516100e09190610688565b60405180910390f35b6100f1610354565b6101016100fc6103ed565b61041e565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101655761016081610444565b61016e565b61016d6100e9565b5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561024b576101ce83610444565b60008373ffffffffffffffffffffffffffffffffffffffff1683836040516101f79291906106e2565b600060405180830381855af49150503d8060008114610232576040519150601f19603f3d011682016040523d82523d6000602084013e610237565b606091505b505090508061024557600080fd5b50610254565b6102536100e9565b5b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102be576102b76103ed565b90506102c7565b6102c66100e9565b5b90565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610348577f00000000000000000000000000000000000000000000000000000000000000009050610351565b6103506100e9565b5b90565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da9061077e565b60405180910390fd5b6103eb610493565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e806000811461043f573d6000f35b3d6000fd5b61044d81610495565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b565b61049e8161050c565b6104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610810565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b600080823b905060008111915050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055482610529565b9050919050565b61056481610549565b811461056f57600080fd5b50565b6000813590506105818161055b565b92915050565b60006020828403121561059d5761059c61051f565b5b60006105ab84828501610572565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105d9576105d86105b4565b5b8235905067ffffffffffffffff8111156105f6576105f56105b9565b5b602083019150836001820283011115610612576106116105be565b5b9250929050565b6000806000604084860312156106325761063161051f565b5b600061064086828701610572565b935050602084013567ffffffffffffffff81111561066157610660610524565b5b61066d868287016105c3565b92509250509250925092565b61068281610549565b82525050565b600060208201905061069d6000830184610679565b92915050565b600081905092915050565b82818337600083830152505050565b60006106c983856106a3565b93506106d68385846106ae565b82840190509392505050565b60006106ef8284866106bd565b91508190509392505050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260008201527f6f6d207468652070726f78792061646d696e0000000000000000000000000000602082015250565b60006107686032836106fb565b91506107738261070c565b604082019050919050565b600060208201905081810360008301526107978161075b565b9050919050565b7f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60008201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000602082015250565b60006107fa603b836106fb565b91506108058261079e565b604082019050919050565b60006020820190508181036000830152610829816107ed565b905091905056fea264697066735822122051d6e30a934cfd253ef46489c0cf2f19d7a69edd677c810c8026db24e1b12c1c64736f6c63430008090033";

type BaseImmutableAdminUpgradeabilityProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseImmutableAdminUpgradeabilityProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseImmutableAdminUpgradeabilityProxy__factory extends ContractFactory {
  constructor(...args: BaseImmutableAdminUpgradeabilityProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseImmutableAdminUpgradeabilityProxy> {
    return super.deploy(
      admin,
      overrides || {}
    ) as Promise<BaseImmutableAdminUpgradeabilityProxy>;
  }
  override getDeployTransaction(
    admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(admin, overrides || {});
  }
  override attach(address: string): BaseImmutableAdminUpgradeabilityProxy {
    return super.attach(address) as BaseImmutableAdminUpgradeabilityProxy;
  }
  override connect(
    signer: Signer
  ): BaseImmutableAdminUpgradeabilityProxy__factory {
    return super.connect(
      signer
    ) as BaseImmutableAdminUpgradeabilityProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseImmutableAdminUpgradeabilityProxyInterface {
    return new utils.Interface(
      _abi
    ) as BaseImmutableAdminUpgradeabilityProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseImmutableAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseImmutableAdminUpgradeabilityProxy;
  }
}
