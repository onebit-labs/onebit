/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  LendingPoolAddressesProviderRegistry,
  LendingPoolAddressesProviderRegistryInterface,
} from "../LendingPoolAddressesProviderRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "AddressesProviderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "AddressesProviderUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressesProvider",
        type: "address",
      },
    ],
    name: "getAddressesProviderIdByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvidersList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "registerAddressesProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "unregisterAddressesProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f358061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c6578063d0267be7146100e4578063d258191e14610114578063f2fde38b146101305761007d565b80630de2670714610082578063365ccbbf1461009e578063715018a6146100bc575b600080fd5b61009c60048036038101906100979190610a99565b61014c565b005b6100a661030e565b6040516100b39190610b84565b60405180910390f35b6100c46104e1565b005b6100ce610569565b6040516100db9190610bb5565b60405180910390f35b6100fe60048036038101906100f99190610a99565b610592565b60405161010b9190610be9565b60405180910390f35b61012e60048036038101906101299190610c30565b6105db565b005b61014a60048036038101906101459190610a99565b610768565b005b610154610860565b73ffffffffffffffffffffffffffffffffffffffff16610172610569565b73ffffffffffffffffffffffffffffffffffffffff16146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf90610ccd565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116040518060400160405280600281526020017f343100000000000000000000000000000000000000000000000000000000000081525090610282576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102799190610d75565b60405180910390fd5b506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f851e5971c053e6b76e3a1e0b8ffa81430df738007fad86e195c409a757faccd260405160405180910390a250565b60606000600280548060200260200160405190810160405280929190818152602001828054801561039457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161034a575b5050505050905060008151905060008167ffffffffffffffff8111156103bd576103bc610d97565b5b6040519080825280602002602001820160405280156103eb5781602001602082028036833780820191505090505b50905060005b828110156104d75760006001600086848151811061041257610411610dc6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156104c45783818151811061046e5761046d610dc6565b5b602002602001015182828151811061048957610488610dc6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806104cf90610e24565b9150506103f1565b5080935050505090565b6104e9610860565b73ffffffffffffffffffffffffffffffffffffffff16610507610569565b73ffffffffffffffffffffffffffffffffffffffff161461055d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055490610ccd565b60405180910390fd5b6105676000610868565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105e3610860565b73ffffffffffffffffffffffffffffffffffffffff16610601610569565b73ffffffffffffffffffffffffffffffffffffffff1614610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610ccd565b60405180910390fd5b60008114156040518060400160405280600281526020017f3732000000000000000000000000000000000000000000000000000000000000815250906106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca9190610d75565b60405180910390fd5b5080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107218261092c565b8173ffffffffffffffffffffffffffffffffffffffff167f2db38786c10176b033a1608361716b0ca992e3af55dc05b6dc710969790beeda60405160405180910390a25050565b610770610860565b73ffffffffffffffffffffffffffffffffffffffff1661078e610569565b73ffffffffffffffffffffffffffffffffffffffff16146107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90610ccd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b90610edf565b60405180910390fd5b61085d81610868565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600280549050905060005b818110156109cd578273ffffffffffffffffffffffffffffffffffffffff166002828154811061096c5761096b610dc6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109ba575050610a33565b80806109c590610e24565b915050610939565b506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6682610a3b565b9050919050565b610a7681610a5b565b8114610a8157600080fd5b50565b600081359050610a9381610a6d565b92915050565b600060208284031215610aaf57610aae610a36565b5b6000610abd84828501610a84565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610afb81610a5b565b82525050565b6000610b0d8383610af2565b60208301905092915050565b6000602082019050919050565b6000610b3182610ac6565b610b3b8185610ad1565b9350610b4683610ae2565b8060005b83811015610b77578151610b5e8882610b01565b9750610b6983610b19565b925050600181019050610b4a565b5085935050505092915050565b60006020820190508181036000830152610b9e8184610b26565b905092915050565b610baf81610a5b565b82525050565b6000602082019050610bca6000830184610ba6565b92915050565b6000819050919050565b610be381610bd0565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b610c0d81610bd0565b8114610c1857600080fd5b50565b600081359050610c2a81610c04565b92915050565b60008060408385031215610c4757610c46610a36565b5b6000610c5585828601610a84565b9250506020610c6685828601610c1b565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cb7602083610c70565b9150610cc282610c81565b602082019050919050565b60006020820190508181036000830152610ce681610caa565b9050919050565b600081519050919050565b60005b83811015610d16578082015181840152602081019050610cfb565b83811115610d25576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d4782610ced565b610d518185610c70565b9350610d61818560208601610cf8565b610d6a81610d2b565b840191505092915050565b60006020820190508181036000830152610d8f8184610d3c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2f82610bd0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e6257610e61610df5565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ec9602683610c70565b9150610ed482610e6d565b604082019050919050565b60006020820190508181036000830152610ef881610ebc565b905091905056fea264697066735822122093e0e90c73aee26505d94782f8898b57e32ddda674c1611229b72c9d9dbd410864736f6c63430008090033";

type LendingPoolAddressesProviderRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolAddressesProviderRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPoolAddressesProviderRegistry__factory extends ContractFactory {
  constructor(...args: LendingPoolAddressesProviderRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPoolAddressesProviderRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<LendingPoolAddressesProviderRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPoolAddressesProviderRegistry {
    return super.attach(address) as LendingPoolAddressesProviderRegistry;
  }
  override connect(
    signer: Signer
  ): LendingPoolAddressesProviderRegistry__factory {
    return super.connect(
      signer
    ) as LendingPoolAddressesProviderRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolAddressesProviderRegistryInterface {
    return new utils.Interface(
      _abi
    ) as LendingPoolAddressesProviderRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPoolAddressesProviderRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LendingPoolAddressesProviderRegistry;
  }
}
