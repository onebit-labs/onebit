/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  InitializableUpgradeabilityProxy,
  InitializableUpgradeabilityProxyInterface,
} from "../../../../dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610693806100206000396000f3fe6080604052600436106100225760003560e01c8063d1f578941461002d57610023565b5b61002b610049565b005b61004760048036038101906100429190610431565b610063565b005b610051610196565b61006161005c610198565b6101c9565b565b600073ffffffffffffffffffffffffffffffffffffffff16610083610198565b73ffffffffffffffffffffffffffffffffffffffff16146100a357600080fd5b60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6100d391906104c6565b60001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b14610108576101076104fa565b5b610111826101ef565b6000815111156101925760008273ffffffffffffffffffffffffffffffffffffffff168260405161014291906105a3565b600060405180830381855af49150503d806000811461017d576040519150601f19603f3d011682016040523d82523d6000602084013e610182565b606091505b505090508061019057600080fd5b505b5050565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e80600081146101ea573d6000f35b3d6000fd5b6101f881610266565b610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e9061063d565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102b88261028d565b9050919050565b6102c8816102ad565b81146102d357600080fd5b50565b6000813590506102e5816102bf565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61033e826102f5565b810181811067ffffffffffffffff8211171561035d5761035c610306565b5b80604052505050565b6000610370610279565b905061037c8282610335565b919050565b600067ffffffffffffffff82111561039c5761039b610306565b5b6103a5826102f5565b9050602081019050919050565b82818337600083830152505050565b60006103d46103cf84610381565b610366565b9050828152602081018484840111156103f0576103ef6102f0565b5b6103fb8482856103b2565b509392505050565b600082601f830112610418576104176102eb565b5b81356104288482602086016103c1565b91505092915050565b6000806040838503121561044857610447610283565b5b6000610456858286016102d6565b925050602083013567ffffffffffffffff81111561047757610476610288565b5b61048385828601610403565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104d18261048d565b91506104dc8361048d565b9250828210156104ef576104ee610497565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561055d578082015181840152602081019050610542565b8381111561056c576000848401525b50505050565b600061057d82610529565b6105878185610534565b935061059781856020860161053f565b80840191505092915050565b60006105af8284610572565b915081905092915050565b600082825260208201905092915050565b7f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60008201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000602082015250565b6000610627603b836105ba565b9150610632826105cb565b604082019050919050565b600060208201905081810360008301526106568161061a565b905091905056fea26469706673582212207c4f8eeb08bc8259b9e89fc303eebc213d8551ad0cd839bdf44da3699bc592d064736f6c63430008090033";

type InitializableUpgradeabilityProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializableUpgradeabilityProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitializableUpgradeabilityProxy__factory extends ContractFactory {
  constructor(...args: InitializableUpgradeabilityProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitializableUpgradeabilityProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<InitializableUpgradeabilityProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitializableUpgradeabilityProxy {
    return super.attach(address) as InitializableUpgradeabilityProxy;
  }
  override connect(signer: Signer): InitializableUpgradeabilityProxy__factory {
    return super.connect(signer) as InitializableUpgradeabilityProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializableUpgradeabilityProxyInterface {
    return new utils.Interface(
      _abi
    ) as InitializableUpgradeabilityProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableUpgradeabilityProxy;
  }
}
