/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1967Proxy,
  ERC1967ProxyInterface,
} from "../../../../dependencies/openzeppelin/upgradeability/ERC1967Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x608060405260405162000d5738038062000d578339818101604052810190620000299190620005c4565b60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6200005b919062000663565b60001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b146200009357620000926200069e565b5b620000a782826000620000af60201b60201c565b5050620008e4565b620000c083620000f260201b60201c565b600082511180620000ce5750805b15620000ed57620000eb83836200014960201b620000281760201c565b505b505050565b62000103816200017f60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606062000177838360405180606001604052806027815260200162000d30602791396200025560201b60201c565b905092915050565b62000195816200033960201b620000551760201c565b620001d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ce9062000754565b60405180910390fd5b80620002117f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200034c60201b620000681760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606062000268846200033960201b60201c565b620002aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002a190620007ec565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051620002d491906200085b565b600060405180830381855af49150503d806000811462000311576040519150601f19603f3d011682016040523d82523d6000602084013e62000316565b606091505b50915091506200032e8282866200035660201b60201c565b925050509392505050565b600080823b905060008111915050919050565b6000819050919050565b606083156200036857829050620003bb565b6000835111156200037c5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b29190620008c0565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040382620003d6565b9050919050565b6200041581620003f6565b81146200042157600080fd5b50565b60008151905062000435816200040a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004908262000445565b810181811067ffffffffffffffff82111715620004b257620004b162000456565b5b80604052505050565b6000620004c7620003c2565b9050620004d5828262000485565b919050565b600067ffffffffffffffff821115620004f857620004f762000456565b5b620005038262000445565b9050602081019050919050565b60005b838110156200053057808201518184015260208101905062000513565b8381111562000540576000848401525b50505050565b60006200055d6200055784620004da565b620004bb565b9050828152602081018484840111156200057c576200057b62000440565b5b6200058984828562000510565b509392505050565b600082601f830112620005a957620005a86200043b565b5b8151620005bb84826020860162000546565b91505092915050565b60008060408385031215620005de57620005dd620003cc565b5b6000620005ee8582860162000424565b925050602083015167ffffffffffffffff811115620006125762000611620003d1565b5b620006208582860162000591565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000670826200062a565b91506200067d836200062a565b92508282101562000693576200069262000634565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006200073c602d83620006cd565b91506200074982620006de565b604082019050919050565b600060208201905081810360008301526200076f816200072d565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000620007d4602683620006cd565b9150620007e18262000776565b604082019050919050565b600060208201905081810360008301526200080781620007c5565b9050919050565b600081519050919050565b600081905092915050565b600062000831826200080e565b6200083d818562000819565b93506200084f81856020860162000510565b80840191505092915050565b600062000869828462000824565b915081905092915050565b600081519050919050565b60006200088c8262000874565b620008988185620006cd565b9350620008aa81856020860162000510565b620008b58162000445565b840191505092915050565b60006020820190508181036000830152620008dc81846200087f565b905092915050565b61043c80620008f46000396000f3fe608060405261000c61000e565b005b610016610072565b610026610021610074565b610083565b565b606061004d83836040518060600160405280602781526020016103e0602791396100a9565b905092915050565b600080823b905060008111915050919050565b6000819050919050565b565b600061007e610176565b905090565b3660008037600080366000845af43d6000803e80600081146100a4573d6000f35b3d6000fd5b60606100b484610055565b6100f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ea906102b7565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161011b9190610351565b600060405180830381855af49150503d8060008114610156576040519150601f19603f3d011682016040523d82523d6000602084013e61015b565b606091505b509150915061016b8282866101cd565b925050509392505050565b60006101a47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610068565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156101dd5782905061022d565b6000835111156101f05782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022491906103bd565b60405180910390fd5b9392505050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006102a1602683610234565b91506102ac82610245565b604082019050919050565b600060208201905081810360008301526102d081610294565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561030b5780820151818401526020810190506102f0565b8381111561031a576000848401525b50505050565b600061032b826102d7565b61033581856102e2565b93506103458185602086016102ed565b80840191505092915050565b600061035d8284610320565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061038f82610368565b6103998185610234565b93506103a98185602086016102ed565b6103b281610373565b840191505092915050565b600060208201905081810360008301526103d78184610384565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cb99623e5b42a49d1e7827d3ad283b056126ba44d1a7a17998836a4a05090ff564736f6c63430008090033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type ERC1967ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1967ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1967Proxy__factory extends ContractFactory {
  constructor(...args: ERC1967ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1967Proxy> {
    return super.deploy(
      _logic,
      _data,
      overrides || {}
    ) as Promise<ERC1967Proxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, _data, overrides || {});
  }
  override attach(address: string): ERC1967Proxy {
    return super.attach(address) as ERC1967Proxy;
  }
  override connect(signer: Signer): ERC1967Proxy__factory {
    return super.connect(signer) as ERC1967Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1967ProxyInterface {
    return new utils.Interface(_abi) as ERC1967ProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1967Proxy {
    return new Contract(address, _abi, signerOrProvider) as ERC1967Proxy;
  }
}
