/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Vault, VaultInterface } from "../Vault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentLiquidityRate",
        type: "int256",
      },
    ],
    name: "NetValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "PurchaseBeginTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "PurchaseEndTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "RedemptionBeginTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RemoveFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newExpiration",
        type: "uint256",
      },
    ],
    name: "WhitelistExpirationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "VAULT_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchAddToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchRemoveFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract IVaultAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "currentLiquidityRate",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "softUpperLimit",
            type: "uint128",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserExpirationTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVaultAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "softUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isInWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newPurchaseEndTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newPurchaseBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "moveThePurchasePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newRedemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheRedemptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "setFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "setWhitelistExpiration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50603480546001600160a01b0319169055613527806100346000396000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c806386601372116100f9578063c0342dc811610097578063ce73a61d11610071578063ce73a61d14610520578063d6f80f9314610533578063e43252d714610546578063fe65acfe1461055957600080fd5b8063c0342dc8146104f2578063c4d66de814610505578063c6d04d861461051857600080fd5b806396c2614c116100d357806396c2614c146104b15780639b8d6d38146104b9578063be131c39146104cc578063bedb86fb146104df57600080fd5b806386601372146104785780638ab1d6811461048b5780638e589df71461049e57600080fd5b80632db6fa36116101665780635c975abb116101405780635c975abb146104295780636bd50cef146104345780636c3fbb801461045d57806375d002f41461047057600080fd5b80632db6fa36146103da57806340585638146103ed578063585e5d201461041657600080fd5b806309fd8212116101a257806309fd8212146103665780630ad40df1146103a15780630cee1725146103b457806320086d9b146103c757600080fd5b8062f714ce146101c8578063045fb888146101ee57806305bef05e14610203575b600080fd5b6101db6101d6366004612ef7565b610574565b6040519081526020015b60405180910390f35b6102016101fc366004612f27565b6108b5565b005b610359604080516101e08101825260006101c08201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101e0810182526035546101c0820190815281526036546001600160801b038082166020840152600160801b91829004600f0b938301939093526037548084166060840152048216608082015260385464ffffffffff80821660a0840152600160281b8204811660c0840152600160501b8204811660e0840152600160781b82041661010083015261ffff600160a01b82048116610120840152600160b01b909104166101408201526039546001600160a01b03908116610160830152603a5416610180820152603b549091166101a082015290565b6040516101e59190612f9c565b6103916103743660046130cd565b6001600160a01b03166000908152603e6020526040902054421090565b60405190151581526020016101e5565b6102016103af3660046130ea565b610a38565b6101db6103c23660046130ea565b610afd565b6102016103d5366004613118565b610e81565b6102016103e8366004612f27565b610fe8565b6101db6103fb3660046130cd565b6001600160a01b03166000908152603e602052604090205490565b6102016104243660046130ea565b611185565b603c5460ff16610391565b6040805160208082018352600090915281518082018352603554908190529151918252016101e5565b61020161046b366004613133565b61134f565b6101db600281565b6102016104863660046130ea565b61148d565b6102016104993660046130cd565b611868565b6102016104ac36600461318a565b61196c565b6101db611cc3565b6101db6104c7366004613210565b611cd4565b6102016104da3660046130cd565b6120e3565b6102016104ed36600461325c565b61222e565b610201610500366004613118565b612360565b6102016105133660046130cd565b6124df565b603d546101db565b61020161052e3660046130ea565b6125b0565b610201610541366004613118565b6126ab565b6102016105543660046130cd565b6127f1565b6034546040516001600160a01b0390911681526020016101e5565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff16156105bd5760405162461bcd60e51b81526004016105b49190613279565b60405180910390fd5b50336000908152603e602090815260409182902054825180840190935260028352611b1b60f11b91830191909152421061060a5760405162461bcd60e51b81526004016105b49190613279565b506039546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b91906132ce565b90508460001981141561069b5750805b6040805180820190915260018152603160f81b60208201524290876106d35760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603560f81b60208201528388111561070d5760405162461bcd60e51b81526004016105b49190613279565b5060385464ffffffffff600160281b909104811690821610801590610763575060385464ffffffffff600160501b90910481169082161080610763575060385464ffffffffff600160781b909104811690821610155b604051806040016040528060018152602001603760f81b8152509061079b5760405162461bcd60e51b81526004016105b49190613279565b506035546040805180820190915260018152601960f91b6020820152610100909116151590816107de5760405162461bcd60e51b81526004016105b49190613279565b50846001600160a01b031663d7020d0a3389866107fb603561291e565b6040516001600160e01b031960e087901b1681526001600160a01b03948516600482015293909216602484015260448301526064820152608401600060405180830381600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b50506040518581526001600160a01b038a1692503391507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509093505050505b92915050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093191906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906109745760405162461bcd60e51b81526004016105b49190613279565b5060005b81811015610a33576000603e600085858581811061099857610998613304565b90506020020160208101906109ad91906130cd565b6001600160a01b031681526020810191909152604001600020558282828181106109d9576109d9613304565b90506020020160208101906109ee91906130cd565b6001600160a01b03167f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c260405160405180910390a2610a2c81613330565b9050610978565b505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b158015610a7c57600080fd5b505afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab491906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610af75760405162461bcd60e51b81526004016105b49190613279565b50603555565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615610b3d5760405162461bcd60e51b81526004016105b49190613279565b5060345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b158015610b8257600080fd5b505afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba91906132e7565b6001600160a01b03161460405180604001604052806002815260200161333360f01b81525090610bfd5760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603160f81b6020820152429083610c365760405162461bcd60e51b81526004016105b49190613279565b50603854600160501b900464ffffffffff168110801590610c665750603854600160781b900464ffffffffff1681105b604051806040016040528060018152602001603960f81b81525090610c9e5760405162461bcd60e51b81526004016105b49190613279565b50603954604080516358b50cef60e11b8152905185926001600160a01b0316918291600091839163b16a19de91600481810192602092909190829003018186803b158015610ceb57600080fd5b505afa158015610cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2391906132e7565b9050600019871415610dab576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a082319060240160206040518083038186803b158015610d7057600080fd5b505afa158015610d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da891906132ce565b93505b603a54604051634efecaa560e01b81526001600160a01b0391821660048201526024810186905290831690634efecaa590604401602060405180830381600087803b158015610df957600080fd5b505af1158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906132ce565b50603a546040518581526001600160a01b03909116907fdcbc04a15249e560179846f4ed762c63956382a0d6e4972fa2b4939a184613ca9060200160405180910390a2509193505050505b919050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b158015610ec557600080fd5b505afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610f405760405162461bcd60e51b81526004016105b49190613279565b5060385464ffffffffff600160501b909104811690821611610f6157600080fd5b4264ffffffffff168164ffffffffff161015610f7c57600080fd5b6038805464ffffffffff838116600160781b81810264ffffffffff60781b1985161790945560408051949093049091168084526020840191909152917fe4c41315b69a185c0a470f338694a4c8006faecac42081b6a7978c4a5c70fa6891015b60405180910390a15050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561102c57600080fd5b505afa158015611040573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106491906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906110a75760405162461bcd60e51b81526004016105b49190613279565b5060005b81811015610a33576000603d54426110c3919061334b565b905080603e60008686868181106110dc576110dc613304565b90506020020160208101906110f191906130cd565b6001600160a01b0316815260208101919091526040016000205583838381811061111d5761111d613304565b905060200201602081019061113291906130cd565b6001600160a01b03167f62c1e066774519db9fe35767c15fc33df2f016675b7cc0c330ed185f286a2d528260405161116c91815260200190565b60405180910390a25061117e81613330565b90506110ab565b60345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b1580156111c957600080fd5b505afa1580156111dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120191906132e7565b6001600160a01b03161460405180604001604052806002815260200161333360f01b815250906112445760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603160f81b60208201528161127b5760405162461bcd60e51b81526004016105b49190613279565b50603954604080516358b50cef60e11b815290516001600160a01b0390921691600091839163b16a19de91600481810192602092909190829003018186803b1580156112c657600080fd5b505afa1580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe91906132e7565b90506113156001600160a01b0382163384866129ea565b60405183815233907f04d1e3db499c88d526b5839da3d76fbdda6fd7310b9aa71a624f2002ef73f95f9060200160405180910390a2505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561139357600080fd5b505afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061140e5760405162461bcd60e51b81526004016105b49190613279565b5060405163220e4eef60e21b8152603560048201526001600160a01b0380841660248301528216604482015273__$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b15801561147157600080fd5b505af4158015611485573d6000803e3d6000fd5b505050505050565b60345460408051630354b3c760e11b8152905133926001600160a01b0316916306a9678e916004808301926020929190829003018186803b1580156114d157600080fd5b505afa1580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150991906132e7565b6001600160a01b031614806115a0575060345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b15801561155d57600080fd5b505afa158015611571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159591906132e7565b6001600160a01b0316145b60405180604001604052806002815260200161064760f31b815250906115d95760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603160f81b6020820152816116105760405162461bcd60e51b81526004016105b49190613279565b50603854429064ffffffffff600160501b90910481169082161080159061164a575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906116825760405162461bcd60e51b81526004016105b49190613279565b506039546040805163b1bf962d60e01b815290516001600160a01b0390921691600091839163b1bf962d91600481810192602092909190829003018186803b1580156116cd57600080fd5b505afa1580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170591906132ce565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561174257600080fd5b505afa158015611756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177a91906132ce565b90506117896035868487612a8c565b7fdf9cc56642031d66906385d61d96c81f52e6ed903d39629da900bf8b67e884e381846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e457600080fd5b505afa1580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181c91906132ce565b6037546036546040805194855260208501939093526001600160801b03918216848401529081166060840152600160801b9004600f0b6080830152519081900360a00190a15050505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156118ac57600080fd5b505afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e491906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906119275760405162461bcd60e51b81526004016105b49190613279565b506001600160a01b0381166000818152603e6020526040808220829055517f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c29190a250565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156119b057600080fd5b505afa1580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e891906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090611a2b5760405162461bcd60e51b81526004016105b49190613279565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b9091048116429091161015611a7c5760405162461bcd60e51b81526004016105b49190613279565b5060385464ffffffffff600160781b909104811690841610801590611aae57508164ffffffffff168364ffffffffff16105b8015611ac757508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b81525090611b005760405162461bcd60e51b81526004016105b49190613279565b506038805461ffff888116600160b01b0261ffff60b01b19918b16600160a01b029190911663ffffffff60a01b1990921691909117179055603780546001600160801b03808816600160801b029116179055611b5c603561291e565b603780546001600160801b03929092166001600160801b0319928316811790915560368054909216179055611ba7611b9d6b033b2e3c9fd0803ce800000090565b8861ffff16612c27565b611bb090613363565b603680546001600160801b03908116600160801b93821693909302929092179055603880546effffffffffffffffffff00000000001916600160281b64ffffffffff87811691820264ffffffffff60501b191692909217600160501b8784169081029190911773ffffffffff00000000000000000000ffffffffff1916600160781b93871693840264ffffffffff1916178117909355603b80546001600160801b03191689861617905560375460408051919095168152602081019190915292830191909152606082015261ffff8089166080830152871660a08201527f690b9d63be57b307a8560c124fdcdada8871409db42c5f79fb205a8b93e5e61b9060c00160405180910390a150505050505050565b6000611ccf603561291e565b905090565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615611d145760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603160f81b602082015284611d4b5760405162461bcd60e51b81526004016105b49190613279565b50336000908152603e602090815260409182902054825180840190935260028352611b1b60f11b918301919091524291908210611d9b5760405162461bcd60e51b81526004016105b49190613279565b50603554603854610100821615159161020016151590600160281b900464ffffffffff90811690841610801590611e03575060385464ffffffffff600160501b90910481169084161080611e03575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b81525090611e3b5760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152601960f91b602082015282611e725760405162461bcd60e51b81526004016105b49190613279565b506040805180820190915260018152603360f81b60208201528115611eaa5760405162461bcd60e51b81526004016105b49190613279565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b158015611ef657600080fd5b505afa158015611f0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2e91906132ce565b603754611f4b9190600160801b90046001600160801b0316613380565b9050808a1115611f59578099505b816001600160a01b031663156e29f68a8c611f74603561291e565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606401602060405180830381600087803b158015611fc257600080fd5b505af1158015611fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffa9190613397565b5061208333848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561203a57600080fd5b505afa15801561204e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207291906132e7565b6001600160a01b03169291906129ea565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d6040516120cd91815260200190565b60405180910390a4509798975050505050505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561212757600080fd5b505afa15801561213b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215f91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906121a25760405162461bcd60e51b81526004016105b49190613279565b50604080518082019091526002815261034360f41b60208201526001600160a01b0382166121e35760405162461bcd60e51b81526004016105b49190613279565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561227257600080fd5b505afa158015612286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122aa91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906122ed5760405162461bcd60e51b81526004016105b49190613279565b50603c805460ff191682151590811790915560ff1615612333576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156123a457600080fd5b505afa1580156123b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123dc91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061241f5760405162461bcd60e51b81526004016105b49190613279565b5060385464ffffffffff600160501b90910481169082161061244057600080fd5b60385464ffffffffff600160281b90910481169082161161246057600080fd5b4264ffffffffff168164ffffffffff16101561247b57600080fd5b6038805464ffffffffff838116600160501b81810264ffffffffff60501b1985161790945560408051949093049091168084526020840191909152917fd70f9ec33fb358b9b35ba27c3022b8f100dea4e0f0cdf87b66de3cfd7f08cc429101610fdc565b60015460029060ff16806124f25750303b155b806124fe575060005481115b6125615760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084016105b4565b60015460ff16158015612580576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b0385161790558015610a33576001805460ff19169055505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156125f457600080fd5b505afa158015612608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061262c91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061266f5760405162461bcd60e51b81526004016105b49190613279565b50603d8190556040518181527f0e036d270c02057c1efc67a26e42d8b96aeada233e8ef6ff0c9d481cf7fb72929060200160405180910390a150565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156126ef57600080fd5b505afa158015612703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272791906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061276a5760405162461bcd60e51b81526004016105b49190613279565b5060385464ffffffffff600160501b90910481169082161061278b57600080fd5b6038805464ffffffffff838116600160281b81810269ffffffffff00000000001985161790945560408051949093049091168084526020840191909152917fccddf9ab03c4f0532fce22824030fb78ec086cb0f90aa53386ad6d221593bb0b9101610fdc565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561283557600080fd5b505afa158015612849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286d91906132e7565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906128b05760405162461bcd60e51b81526004016105b49190613279565b506000603d54426128c1919061334b565b6001600160a01b0383166000818152603e60205260409081902083905551919250907f62c1e066774519db9fe35767c15fc33df2f016675b7cc0c330ed185f286a2d52906129129084815260200190565b60405180910390a25050565b600381015460009064ffffffffff808216914291600160501b90910481169082161161295757505050600101546001600160801b031690565b600384015464ffffffffff600160781b9091048116908216111561298a57506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff1611156129d75760018401546129cf906001600160801b038116906129c990600160801b9004600f0b8486612c74565b90612cc6565b949350505050565b505050600101546001600160801b031690565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1612a2f573d6000803e3d6000fd5b50612a3985612d63565b612a855760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016105b4565b5050505050565b6003840154600090612aac90600160501b900464ffffffffff1683613380565b600286015490915060009081906001600160801b03168181881115612b3057612aed612ad8838a613380565b60038b0154600160b01b900461ffff16612c27565b60038a0154909350612b0b908990600160a01b900461ffff16612c27565b60038a0154909450612b29908990600160a01b900461ffff166133b4565b9050612b6c565b6003890154612b4b908390600160a01b900461ffff16612c27565b60038a0154909450612b69908390600160a01b900461ffff166133b4565b90505b6000836301e13380612b7e88886133b4565b612b8891906133e9565b612b92908b613380565b612b9c9190613380565b9050612710612bab8383612e0c565b612bb591906133e9565b60018b0180546001600160801b0319166001600160801b0384161790559150612bdd82613363565b60018b0180546001600160801b03928316600160801b0292169190911790555050506003909601805464ffffffffff90941664ffffffffff19909416939093179092555050505050565b6000821580612c34575081155b15612c41575060006108af565b612710612c4f6002826133e9565b612c5984866133b4565b612c63919061334b565b612c6d91906133e9565b9392505050565b600080612c8b64ffffffffff808516908616613380565b90506b033b2e3c9fd0803ce80000006301e13380612ca983886133fd565b612cb39190613482565b612cbd91906134b0565b95945050505050565b6000821580612cd3575081155b15612ce0575060006108af565b81612cf860026b033b2e3c9fd0803ce80000006133e9565b612d0490600019613380565b612d0e91906133e9565b83111560405180604001604052806002815260200161068760f31b81525090612d4a5760405162461bcd60e51b81526004016105b49190613279565b506b033b2e3c9fd0803ce8000000612c4f6002826133e9565b6000612d89565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d8015612dc85760208114612df957612dc37f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612d6a565b612e06565b823b612df057612df07311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612d6a565b60019150612e06565b3d6000803e600051151591505b50919050565b604080518082019091526002815261035360f41b602082015260009082612e465760405162461bcd60e51b81526004016105b49190613279565b506000612e546002846133e9565b90506b033b2e3c9fd0803ce8000000612e6f82600019613380565b612e7991906133e9565b84111560405180604001604052806002815260200161068760f31b81525090612eb55760405162461bcd60e51b81526004016105b49190613279565b508281612ece6b033b2e3c9fd0803ce8000000876133b4565b612ed8919061334b565b6129cf91906133e9565b6001600160a01b038116811461235d57600080fd5b60008060408385031215612f0a57600080fd5b823591506020830135612f1c81612ee2565b809150509250929050565b60008060208385031215612f3a57600080fd5b823567ffffffffffffffff80821115612f5257600080fd5b818501915085601f830112612f6657600080fd5b813581811115612f7557600080fd5b8660208260051b8501011115612f8a57600080fd5b60209290920196919550909350505050565b81515181526101c081016020830151612fc060208401826001600160801b03169052565b506040830151612fd56040840182600f0b9052565b506060830151612ff060608401826001600160801b03169052565b50608083015161300b60808401826001600160801b03169052565b5060a083015161302460a084018264ffffffffff169052565b5060c083015161303d60c084018264ffffffffff169052565b5060e083015161305660e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b039081169184019190915261018080850151909116908301526101a0928301516001600160801b0316929091019190915290565b6000602082840312156130df57600080fd5b8135612c6d81612ee2565b6000602082840312156130fc57600080fd5b5035919050565b803564ffffffffff81168114610e7c57600080fd5b60006020828403121561312a57600080fd5b612c6d82613103565b6000806040838503121561314657600080fd5b823561315181612ee2565b91506020830135612f1c81612ee2565b803561ffff81168114610e7c57600080fd5b80356001600160801b0381168114610e7c57600080fd5b600080600080600080600060e0888a0312156131a557600080fd5b6131ae88613161565b96506131bc60208901613161565b95506131ca60408901613173565b94506131d860608901613173565b93506131e660808901613103565b92506131f460a08901613103565b915061320260c08901613103565b905092959891949750929550565b60008060006060848603121561322557600080fd5b83359250602084013561323781612ee2565b915061324560408501613161565b90509250925092565b801515811461235d57600080fd5b60006020828403121561326e57600080fd5b8135612c6d8161324e565b600060208083528351808285015260005b818110156132a65785810183015185820160400152820161328a565b818111156132b8576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156132e057600080fd5b5051919050565b6000602082840312156132f957600080fd5b8151612c6d81612ee2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156133445761334461331a565b5060010190565b6000821982111561335e5761335e61331a565b500190565b6000600160ff1b8214156133795761337961331a565b5060000390565b6000828210156133925761339261331a565b500390565b6000602082840312156133a957600080fd5b8151612c6d8161324e565b60008160001904831182151516156133ce576133ce61331a565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826133f8576133f86133d3565b500490565b60006001600160ff1b03818413828413808216868404861116156134235761342361331a565b600160ff1b60008712828116878305891216156134425761344261331a565b6000871292508782058712848416161561345e5761345e61331a565b878505871281841616156134745761347461331a565b505050929093029392505050565b600082613491576134916133d3565b600160ff1b8214600019841416156134ab576134ab61331a565b500590565b600080821280156001600160ff1b03849003851316156134d2576134d261331a565b600160ff1b83900384128116156134eb576134eb61331a565b5050019056fea2646970667358221220c73963dbbbaa7a89d35ded19ff5ac155ff6848ae0009df8ef7336b59723fdec964736f6c63430008090033";

type VaultConstructorParams =
  | [linkLibraryAddresses: VaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Vault__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VaultLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}

export interface VaultLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
