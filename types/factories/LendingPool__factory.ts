/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LendingPool, LendingPoolInterface } from "../LendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "LENDINGPOOL_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "updateFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50603480546001600160a01b031916905561237c806100346000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c806382dbb635116100a25780639b8d6d38116100715780639b8d6d3814610347578063bedb86fb1461035a578063c4d66de81461036d578063e0b8ff7314610380578063fe65acfe1461039357600080fd5b806382dbb6351461031157806386601372146103245780638afaff021461033757806396c2614c1461033f57600080fd5b8063585e5d20116100de578063585e5d20146102ac5780635c975abb146102bf5780636bd50cef146102d55780636c3fbb80146102fe57600080fd5b8062f714ce1461010f57806305bef05e146101355780630ad40df1146102845780630cee172514610299575b600080fd5b61012261011d366004611f51565b6103ae565b6040519081526020015b60405180910390f35b610277604080516101c08101825260006101a08201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915250604080516101c0810182526035546101a0820190815281526036546001600160801b038082166020840152600160801b91829004811693830193909352603754808416606084015204909116608082015260385464ffffffffff80821660a0840152600160281b8204811660c0840152600160501b8204811660e0840152600160781b82041661010083015261ffff600160a01b82048116610120840152600160b01b909104166101408201526039546001600160a01b03908116610160830152603a541661018082015290565b60405161012c9190611f81565b6102976102923660046120a2565b610696565b005b6101226102a73660046120a2565b61075b565b6102976102ba3660046120a2565b610adf565b603b5460ff16604051901515815260200161012c565b60408051602080820183526000909152815180820183526035549081905291519182520161012c565b61029761030c3660046120bb565b610ca9565b61029761031f366004612110565b610de7565b6102976103323660046120a2565b611069565b610122600181565b610122611281565b610122610355366004612192565b611292565b6102976103683660046121de565b611656565b61029761037b3660046121fb565b611788565b61029761038e3660046121fb565b611858565b6034546040516001600160a01b03909116815260200161012c565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff16156103f75760405162461bcd60e51b81526004016103ee9190612218565b60405180910390fd5b506039546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610478919061226d565b9050846000198114156104885750805b6040805180820190915260018152603160f81b60208201524290876104c05760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603560f81b6020820152838811156104fa5760405162461bcd60e51b81526004016103ee9190612218565b5060385464ffffffffff600160281b909104811690821610801590610550575060385464ffffffffff600160501b90910481169082161080610550575060385464ffffffffff600160781b909104811690821610155b604051806040016040528060018152602001603760f81b815250906105885760405162461bcd60e51b81526004016103ee9190612218565b506035546040805180820190915260018152601960f91b6020820152610100909116151590816105cb5760405162461bcd60e51b81526004016103ee9190612218565b50603654604051636b81068560e11b81523360048201526001600160a01b038981166024830152604482018690526001600160801b0390921660648201529086169063d7020d0a90608401600060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b50506040518581526001600160a01b038a1692503391507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509093505050505b92915050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190612286565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906107555760405162461bcd60e51b81526004016103ee9190612218565b50603555565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff161561079b5760405162461bcd60e51b81526004016103ee9190612218565b5060345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190612286565b6001600160a01b03161460405180604001604052806002815260200161064760f31b8152509061085b5760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603160f81b60208201524290836108945760405162461bcd60e51b81526004016103ee9190612218565b50603854600160501b900464ffffffffff1681108015906108c45750603854600160781b900464ffffffffff1681105b604051806040016040528060018152602001603960f81b815250906108fc5760405162461bcd60e51b81526004016103ee9190612218565b50603954604080516358b50cef60e11b8152905185926001600160a01b0316918291600091839163b16a19de91600481810192602092909190829003018186803b15801561094957600080fd5b505afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190612286565b9050600019871415610a09576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a082319060240160206040518083038186803b1580156109ce57600080fd5b505afa1580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a06919061226d565b93505b603a54604051634efecaa560e01b81526001600160a01b0391821660048201526024810186905290831690634efecaa590604401602060405180830381600087803b158015610a5757600080fd5b505af1158015610a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8f919061226d565b50603a546040518581526001600160a01b03909116907fdcbc04a15249e560179846f4ed762c63956382a0d6e4972fa2b4939a184613ca9060200160405180910390a2509193505050505b919050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015610b2357600080fd5b505afa158015610b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5b9190612286565b6001600160a01b03161460405180604001604052806002815260200161064760f31b81525090610b9e5760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603160f81b602082015281610bd55760405162461bcd60e51b81526004016103ee9190612218565b50603954604080516358b50cef60e11b815290516001600160a01b0390921691600091839163b16a19de91600481810192602092909190829003018186803b158015610c2057600080fd5b505afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190612286565b9050610c6f6001600160a01b0382163384866119a3565b60405183815233907f04d1e3db499c88d526b5839da3d76fbdda6fd7310b9aa71a624f2002ef73f95f9060200160405180910390a2505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b158015610ced57600080fd5b505afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d259190612286565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610d685760405162461bcd60e51b81526004016103ee9190612218565b5060405163220e4eef60e21b8152603560048201526001600160a01b0380841660248301528216604482015273__$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b158015610dcb57600080fd5b505af4158015610ddf573d6000803e3d6000fd5b505050505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015610e2b57600080fd5b505afa158015610e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e639190612286565b6001600160a01b03161460405180604001604052806002815260200161064760f31b81525090610ea65760405162461bcd60e51b81526004016103ee9190612218565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b9091048116429091161015610ef75760405162461bcd60e51b81526004016103ee9190612218565b5060385464ffffffffff600160781b909104811690841610801590610f2957508164ffffffffff168364ffffffffff16105b8015610f4257508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b81525090610f7b5760405162461bcd60e51b81526004016103ee9190612218565b506038805461ffff878116600160b01b0261ffff60b01b19918a16600160a01b029190911663ffffffff60a01b19909216919091171790556036546001600160801b03808616600160801b026001600160801b031916911617603755610fe9676765c793fa10079d601b1b90565b603680546001600160801b03928316600160801b0292169190911790556038805464ffffffffff928316600160781b0264ffffffffff60781b19948416600160501b0264ffffffffff60501b1994909616600160281b02939093166effffffffffffffffffff000000000019909116179390931791909116179055505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b1580156110ad57600080fd5b505afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190612286565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906111285760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603160f81b60208201528161115f5760405162461bcd60e51b81526004016103ee9190612218565b50603854429064ffffffffff600160501b909104811690821610801590611199575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906111d15760405162461bcd60e51b81526004016103ee9190612218565b506039546037546040805163b1bf962d60e01b815290516001600160a01b039093169260009261126c926001600160801b0390911691859163b1bf962d916004828101926020929190829003018186803b15801561122e57600080fd5b505afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611266919061226d565b90611a45565b905061127b6035858386611b05565b50505050565b600061128d6035611c8f565b905090565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff16156112d25760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603160f81b6020820152846113095760405162461bcd60e51b81526004016103ee9190612218565b50426000806113276035546101008116151591610200909116151590565b603854919350915064ffffffffff600160281b909104811690841610801590611381575060385464ffffffffff600160501b90910481169084161080611381575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b815250906113b95760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152601960f91b6020820152826113f05760405162461bcd60e51b81526004016103ee9190612218565b506040805180820190915260018152603360f81b602082015281156114285760405162461bcd60e51b81526004016103ee9190612218565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b15801561147457600080fd5b505afa158015611488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ac919061226d565b6037546114c99190600160801b90046001600160801b03166122b9565b9050808a11156114d7578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b15801561153557600080fd5b505af1158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d91906122d0565b506115f633848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115ad57600080fd5b505afa1580156115c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e59190612286565b6001600160a01b03169291906119a3565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d60405161164091815260200190565b60405180910390a4509798975050505050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561169a57600080fd5b505afa1580156116ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d29190612286565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906117155760405162461bcd60e51b81526004016103ee9190612218565b50603b805460ff191682151590811790915560ff161561175b576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b6001805460ff16806117995750303b155b806117a5575060005481115b6118085760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084016103ee565b60015460ff16158015611827576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b0385161790558015611853576001805460ff191690555b505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561189c57600080fd5b505afa1580156118b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d49190612286565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906119175760405162461bcd60e51b81526004016103ee9190612218565b50604080518082019091526002815261034360f41b60208201526001600160a01b0382166119585760405162461bcd60e51b81526004016103ee9190612218565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16119e8573d6000803e3d6000fd5b506119f285611d46565b611a3e5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016103ee565b5050505050565b6000821580611a52575081155b15611a5f57506000610690565b81611a766002676765c793fa10079d601b1b6122ed565b611a82906000196122b9565b611a8c91906122ed565b83111560405180604001604052806002815260200161068760f31b81525090611ac85760405162461bcd60e51b81526004016103ee9190612218565b50676765c793fa10079d601b1b611ae06002826122ed565b611aea848661230f565b611af4919061232e565b611afe91906122ed565b9392505050565b6003840154600090611b2590600160501b900464ffffffffff16836122b9565b905060008084861115611b9757611b54611b3f86886122b9565b6003890154600160b01b900461ffff16611def565b90506301e1338083611b7c888a60030160149054906101000a900461ffff1661ffff16611def565b611b86919061230f565b611b9091906122ed565b9150611bd1565b60038701546301e13380908490611bba908890600160a01b900461ffff16611def565b611bc4919061230f565b611bce91906122ed565b91505b600081611bde84896122b9565b611be891906122b9565b90506000611bf68288611e17565b60028a0154909150611c129082906001600160801b0316611a45565b60018a0180546001600160801b0319166001600160801b0392909216919091179055846301e13380676765c793fa10079d601b1b611c5090846122b9565b611c5a919061230f565b611c6491906122ed565b600190990180546001600160801b039a8b16600160801b029a16999099179098555050505050505050565b600381015460009064ffffffffff808216914291600160781b90910481169082161115611ccb57506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff16118015611cfd5750600384015464ffffffffff600160501b9091048116908216115b15611d33576001840154611d2b906001600160801b038082169161126691600160801b909104168486611eeb565b949350505050565b505050600101546001600160801b031690565b6000611d6c565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d8015611dab5760208114611ddc57611da67f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611d4d565b611de9565b823b611dd357611dd37311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611d4d565b60019150611de9565b3d6000803e600051151591505b50919050565b6000821580611dfc575081155b15611e0957506000610690565b612710611ae06002826122ed565b604080518082019091526002815261035360f41b602082015260009082611e515760405162461bcd60e51b81526004016103ee9190612218565b506000611e5f6002846122ed565b9050676765c793fa10079d601b1b611e79826000196122b9565b611e8391906122ed565b84111560405180604001604052806002815260200161068760f31b81525090611ebf5760405162461bcd60e51b81526004016103ee9190612218565b508281611ed7676765c793fa10079d601b1b8761230f565b611ee1919061232e565b611d2b91906122ed565b600080611f0264ffffffffff8085169086166122b9565b9050676765c793fa10079d601b1b6301e13380611f1f838861230f565b611f2991906122ed565b611f33919061232e565b95945050505050565b6001600160a01b038116811461178557600080fd5b60008060408385031215611f6457600080fd5b823591506020830135611f7681611f3c565b809150509250929050565b81515181526101a081016020830151611fa560208401826001600160801b03169052565b506040830151611fc060408401826001600160801b03169052565b506060830151611fdb60608401826001600160801b03169052565b506080830151611ff660808401826001600160801b03169052565b5060a083015161200f60a084018264ffffffffff169052565b5060c083015161202860c084018264ffffffffff169052565b5060e083015161204160e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b03908116918401919091526101809384015116929091019190915290565b6000602082840312156120b457600080fd5b5035919050565b600080604083850312156120ce57600080fd5b82356120d981611f3c565b91506020830135611f7681611f3c565b803561ffff81168114610ada57600080fd5b803564ffffffffff81168114610ada57600080fd5b60008060008060008060c0878903121561212957600080fd5b612132876120e9565b9550612140602088016120e9565b945060408701356001600160801b038116811461215c57600080fd5b935061216a606088016120fb565b9250612178608088016120fb565b915061218660a088016120fb565b90509295509295509295565b6000806000606084860312156121a757600080fd5b8335925060208401356121b981611f3c565b91506121c7604085016120e9565b90509250925092565b801515811461178557600080fd5b6000602082840312156121f057600080fd5b8135611afe816121d0565b60006020828403121561220d57600080fd5b8135611afe81611f3c565b600060208083528351808285015260005b8181101561224557858101830151858201604001528201612229565b81811115612257576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561227f57600080fd5b5051919050565b60006020828403121561229857600080fd5b8151611afe81611f3c565b634e487b7160e01b600052601160045260246000fd5b6000828210156122cb576122cb6122a3565b500390565b6000602082840312156122e257600080fd5b8151611afe816121d0565b60008261230a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612329576123296122a3565b500290565b60008219821115612341576123416122a3565b50019056fea2646970667358221220733d8140971f284b5741cf1bb0adb78f00f463d0e81a8df6cfb2b7a83c8d43bf64736f6c63430008090033";

type LendingPoolConstructorParams =
  | [linkLibraryAddresses: LendingPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LendingPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LendingPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(overrides || {}) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}

export interface LendingPoolLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
