/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LendingPool, LendingPoolInterface } from "../LendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "OTokenUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oToken",
        type: "address",
      },
    ],
    name: "ReserveInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "LENDINGPOOL_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "oTokenImpl",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "underlyingAssetDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "string",
            name: "underlyingAssetName",
            type: "string",
          },
          {
            internalType: "string",
            name: "oTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "oTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct ILendingPool.InitReserveInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeroid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "updateFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "implementation",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct ILendingPool.UpdateOTokenInput",
        name: "input",
        type: "tuple",
      },
    ],
    name: "updateOToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50603480546001600160a01b03191690556133a7806100346000396000f3fe60806040523480156200001157600080fd5b5060043610620001205760003560e01c80638afaff0211620000af578063c15d7c78116200007a578063c15d7c781462000381578063c4d66de81462000398578063e0b8ff7314620003af578063f9f7807514620003c6578063fe65acfe14620003dd57600080fd5b80638afaff02146200034057806396c2614c14620003495780639b8d6d381462000353578063bedb86fb146200036a57600080fd5b80635c975abb11620000f05780635c975abb14620002d15780636bd50cef14620002e857806384a661f2146200031257806386601372146200032957600080fd5b8062f714ce146200012557806305bef05e146200014f5780630cee172514620002a1578063585e5d2014620002b8575b600080fd5b6200013c62000136366004620024ff565b620003f9565b6040519081526020015b60405180910390f35b62000292604080516101c08101825260006101a08201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915250604080516101c0810182526035546101a0820190815281526036546001600160801b038082166020840152600160801b91829004811693830193909352603754808416606084015204909116608082015260385464ffffffffff80821660a0840152600160281b8204811660c0840152600160501b8204811660e0840152600160781b82041661010083015261ffff600160a01b82048116610120840152600160b01b909104166101408201526039546001600160a01b03908116610160830152603a541661018082015290565b60405162000146919062002532565b6200013c620002b23660046200265a565b620006f9565b620002cf620002c93660046200265a565b62000a9b565b005b603b5460ff16604051901515815260200162000146565b60408051602080820183526000909152815180820183526035549081905291519182520162000146565b620002cf620003233660046200269d565b62000c75565b620002cf6200033a3660046200265a565b62000f07565b6200013c600181565b6200013c62001135565b6200013c620003643660046200272b565b62001148565b620002cf6200037b3660046200277d565b62001530565b620002cf620003923660046200279d565b6200166a565b620002cf620003a9366004620027db565b6200184a565b620002cf620003c0366004620027db565b62001920565b620002cf620003d7366004620027fb565b62001a75565b6034546040516001600160a01b03909116815260200162000146565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff1615620004455760405162461bcd60e51b81526004016200043c91906200288a565b60405180910390fd5b506039546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b1580156200048f57600080fd5b505afa158015620004a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ca91906200289f565b905084600019811415620004db5750805b6040805180820190915260018152603160f81b6020820152429087620005165760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603560f81b602082015283881115620005535760405162461bcd60e51b81526004016200043c91906200288a565b5060385464ffffffffff600160281b909104811690821610801590620005ab575060385464ffffffffff600160501b90910481169082161080620005ab575060385464ffffffffff600160781b909104811690821610155b604051806040016040528060018152602001603760f81b81525090620005e65760405162461bcd60e51b81526004016200043c91906200288a565b506035546040805180820190915260018152601960f91b6020820152610100909116151590816200062c5760405162461bcd60e51b81526004016200043c91906200288a565b50603654604051636b81068560e11b81523360048201526001600160a01b038981166024830152604482018690526001600160801b0390921660648201529086169063d7020d0a90608401600060405180830381600087803b1580156200069257600080fd5b505af1158015620006a7573d6000803e3d6000fd5b50506040518581526001600160a01b038a1692503391507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509093505050505b92915050565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff16156200073c5760405162461bcd60e51b81526004016200043c91906200288a565b50603454604080516315d9b46f60e31b8152905133926001600160a01b03169163aecda378916004808301926020929190829003018186803b1580156200078257600080fd5b505afa15801562000797573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007bd9190620028b9565b6001600160a01b03161460405180604001604052806002815260200161333360f01b81525090620008035760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603160f81b60208201524290836200083f5760405162461bcd60e51b81526004016200043c91906200288a565b50603854600160501b900464ffffffffff168110801590620008705750603854600160781b900464ffffffffff1681105b604051806040016040528060018152602001603960f81b81525090620008ab5760405162461bcd60e51b81526004016200043c91906200288a565b50603954604080516358b50cef60e11b8152905185926001600160a01b0316918291600091839163b16a19de91600481810192602092909190829003018186803b158015620008f957600080fd5b505afa1580156200090e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009349190620028b9565b9050600019871415620009c1576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a082319060240160206040518083038186803b1580156200098357600080fd5b505afa15801562000998573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009be91906200289f565b93505b603a54604051634efecaa560e01b81526001600160a01b0391821660048201526024810186905290831690634efecaa590604401602060405180830381600087803b15801562000a1057600080fd5b505af115801562000a25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a4b91906200289f565b50603a546040518581526001600160a01b03909116907fdcbc04a15249e560179846f4ed762c63956382a0d6e4972fa2b4939a184613ca9060200160405180910390a2509193505050505b919050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801562000ae057600080fd5b505afa15801562000af5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1b9190620028b9565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509062000b615760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603160f81b60208201528162000b9b5760405162461bcd60e51b81526004016200043c91906200288a565b50603954604080516358b50cef60e11b815290516001600160a01b0390921691600091839163b16a19de91600481810192602092909190829003018186803b15801562000be757600080fd5b505afa15801562000bfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c229190620028b9565b905062000c3b6001600160a01b03821633848662001d1f565b60405183815233907f04d1e3db499c88d526b5839da3d76fbdda6fd7310b9aa71a624f2002ef73f95f9060200160405180910390a2505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801562000cba57600080fd5b505afa15801562000ccf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf59190620028b9565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509062000d3b5760405162461bcd60e51b81526004016200043c91906200288a565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b909104811642909116101562000d8f5760405162461bcd60e51b81526004016200043c91906200288a565b5060385464ffffffffff600160781b90910481169084161080159062000dc257508164ffffffffff168364ffffffffff16105b801562000ddc57508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b8152509062000e185760405162461bcd60e51b81526004016200043c91906200288a565b506038805461ffff878116600160b01b0261ffff60b01b19918a16600160a01b029190911663ffffffff60a01b19909216919091171790556036546001600160801b03808616600160801b026001600160801b03191691161760375562000e87676765c793fa10079d601b1b90565b603680546001600160801b03928316600160801b0292169190911790556038805464ffffffffff928316600160781b0264ffffffffff60781b19948416600160501b0264ffffffffff60501b1994909616600160281b02939093166effffffffffffffffffff000000000019909116179390931791909116179055505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801562000f4c57600080fd5b505afa15801562000f61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f879190620028b9565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509062000fcd5760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603160f81b602082015281620010075760405162461bcd60e51b81526004016200043c91906200288a565b50603854429064ffffffffff600160501b90910481169082161080159062001042575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906200107d5760405162461bcd60e51b81526004016200043c91906200288a565b506039546037546040805163b1bf962d60e01b815290516001600160a01b03909316926000926200111e926001600160801b0390911691859163b1bf962d916004828101926020929190829003018186803b158015620010dc57600080fd5b505afa158015620010f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200111791906200289f565b9062001dc6565b90506200112f603585838662001e9a565b50505050565b600062001143603562002046565b905090565b603b546040805180820190915260028152610d8d60f21b602082015260009160ff16156200118b5760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603160f81b602082015284620011c55760405162461bcd60e51b81526004016200043c91906200288a565b5042600080620011e46035546101008116151591610200909116151590565b603854919350915064ffffffffff600160281b90910481169084161080159062001240575060385464ffffffffff600160501b9091048116908416108062001240575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b815250906200127b5760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152601960f91b602082015282620012b55760405162461bcd60e51b81526004016200043c91906200288a565b506040805180820190915260018152603360f81b60208201528115620012f05760405162461bcd60e51b81526004016200043c91906200288a565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b1580156200133d57600080fd5b505afa15801562001352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200137891906200289f565b603754620013979190600160801b90046001600160801b0316620028ef565b9050808a1115620013a6578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b1580156200140557600080fd5b505af11580156200141a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001440919062002909565b50620014cf33848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200148257600080fd5b505afa15801562001497573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014bd9190620028b9565b6001600160a01b031692919062001d1f565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d6040516200151a91815260200190565b60405180910390a4509798975050505050505050565b60345460408051636ee554f560e11b8152905133926001600160a01b03169163ddcaa9ea916004808301926020929190829003018186803b1580156200157557600080fd5b505afa1580156200158a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015b09190620028b9565b6001600160a01b031614604051806040016040528060028152602001611b9b60f11b81525090620015f65760405162461bcd60e51b81526004016200043c91906200288a565b50603b805460ff191682151590811790915560ff16156200163d576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b603454604080516315d9b46f60e31b8152905133926001600160a01b03169163aecda378916004808301926020929190829003018186803b158015620016af57600080fd5b505afa158015620016c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016ea9190620028b9565b6001600160a01b03161460405180604001604052806002815260200161333360f01b81525090620017305760405162461bcd60e51b81526004016200043c91906200288a565b5060408051602081019091526035549081905260ff166000637fdd585f60e01b30836200175e868062002929565b6200176d602089018962002929565b6200177c60608b018b62002929565b60405160240162001795989796959493929190620029a3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252603954909250620017f7916001600160a01b0390911690620017f09060608701908701620027db565b8362002103565b620018096060840160408501620027db565b6039546040516001600160a01b0392831692909116907f47e210133a1d4df0735eeb239d47219a0a685e37fc47e26f0517eee5cbb2cc9690600090a3505050565b6001805460ff16806200185c5750303b155b8062001869575060005481115b620018ce5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084016200043c565b60015460ff16158015620018ee576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b03851617905580156200191b576001805460ff191690555b505050565b603454604080516315d9b46f60e31b8152905133926001600160a01b03169163aecda378916004808301926020929190829003018186803b1580156200196557600080fd5b505afa1580156200197a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019a09190620028b9565b6001600160a01b03161460405180604001604052806002815260200161333360f01b81525090620019e65760405162461bcd60e51b81526004016200043c91906200288a565b50604080518082019091526002815261034360f41b60208201526001600160a01b03821662001a2a5760405162461bcd60e51b81526004016200043c91906200288a565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b603454604080516315d9b46f60e31b8152905133926001600160a01b03169163aecda378916004808301926020929190829003018186803b15801562001aba57600080fd5b505afa15801562001acf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001af59190620028b9565b6001600160a01b03161460405180604001604052806002815260200161333360f01b8152509062001b3b5760405162461bcd60e51b81526004016200043c91906200288a565b50600062001bfd62001b516020840184620027db565b637fdd585f60e01b3062001b6c6060870160408801620027db565b62001b7e604088016020890162002a08565b62001b8d608089018962002929565b62001b9c60a08b018b62002929565b62001bab60e08d018d62002929565b60405160240162001bc59998979695949392919062002a2d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526200216f565b905073__$d3b4366daeb9cadc7528af6145b50b2183$__6388393bbc60358362001c2e60e0870160c08801620027db565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b03918216602484015216604482015260640160006040518083038186803b15801562001c7c57600080fd5b505af415801562001c91573d6000803e3d6000fd5b50506040805160208082018352603554825290935062001cc7925062001cbc91860190860162002a08565b829060ff166200221e565b62001cd481600162002268565b62001ce181600062002292565b80516035556040516001600160a01b038316907f0499d871c77da24e23f15a1c0c61d9741a93909db53cb6eb3b8575ab6a9179fe90600090a2505050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af162001d65573d6000803e3d6000fd5b5062001d7185620022bc565b62001dbf5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016200043c565b5050505050565b600082158062001dd4575081155b1562001de357506000620006f3565b8162001dfc6002676765c793fa10079d601b1b62002aa1565b62001e0a90600019620028ef565b62001e16919062002aa1565b83111560405180604001604052806002815260200161068760f31b8152509062001e555760405162461bcd60e51b81526004016200043c91906200288a565b50676765c793fa10079d601b1b62001e6f60028262002aa1565b62001e7b848662002ac4565b62001e87919062002ae6565b62001e93919062002aa1565b9392505050565b600384015460009062001ebc90600160501b900464ffffffffff1683620028ef565b90506000808486111562001f3a5762001ef062001eda8688620028ef565b6003890154600160b01b900461ffff166200236f565b90506301e133808362001f1a888a60030160149054906101000a900461ffff1661ffff166200236f565b62001f26919062002ac4565b62001f32919062002aa1565b915062001f7a565b60038701546301e1338090849062001f5f908890600160a01b900461ffff166200236f565b62001f6b919062002ac4565b62001f77919062002aa1565b91505b60008162001f898489620028ef565b62001f959190620028ef565b9050600062001fa582886200239c565b60028a015490915062001fc39082906001600160801b031662001dc6565b60018a0180546001600160801b0319166001600160801b0392909216919091179055846301e13380676765c793fa10079d601b1b620020039084620028ef565b6200200f919062002ac4565b6200201b919062002aa1565b600190990180546001600160801b039a8b16600160801b029a16999099179098555050505050505050565b600381015460009064ffffffffff808216914291600160781b909104811690821611156200208357506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff16118015620020b65750600384015464ffffffffff600160501b9091048116908216115b15620020f0576001840154620020e8906001600160801b03808216916200111791600160801b90910416848662002482565b949350505050565b505050600101546001600160801b031690565b60405163278f794360e11b815283906001600160a01b03821690634f1ef2869062002135908690869060040162002b01565b600060405180830381600087803b1580156200215057600080fd5b505af115801562002165573d6000803e3d6000fd5b5050505050505050565b600080306040516200218190620024db565b6001600160a01b039091168152602001604051809103906000f080158015620021ae573d6000803e3d6000fd5b5060405163347d5e2560e21b81529091506001600160a01b0382169063d1f5789490620021e2908790879060040162002b01565b600060405180830381600087803b158015620021fd57600080fd5b505af115801562002212573d6000803e3d6000fd5b50929695505050505050565b604080518082019091526002815261037360f41b602082015260ff8211156200225c5760405162461bcd60e51b81526004016200043c91906200288a565b50815160ff1916179052565b600881620022785760006200227b565b60015b8351610100191660ff9190911690911b1790915250565b600981620022a2576000620022a5565b60015b8351610200191660ff9190911690911b1790915250565b6000620022e3565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156200232757602081146200235c57620023217f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f620022c4565b62002369565b823b6200235257620023527311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014620022c4565b6001915062002369565b3d6000803e600051151591505b50919050565b60008215806200237d575081155b156200238c57506000620006f3565b61271062001e6f60028262002aa1565b604080518082019091526002815261035360f41b602082015260009082620023d95760405162461bcd60e51b81526004016200043c91906200288a565b506000620023e960028462002aa1565b9050676765c793fa10079d601b1b6200240582600019620028ef565b62002411919062002aa1565b84111560405180604001604052806002815260200161068760f31b81525090620024505760405162461bcd60e51b81526004016200043c91906200288a565b5082816200246a676765c793fa10079d601b1b8762002ac4565b62002476919062002ae6565b620020e8919062002aa1565b6000806200249b64ffffffffff808516908616620028ef565b9050676765c793fa10079d601b1b6301e13380620024ba838862002ac4565b620024c6919062002aa1565b620024d2919062002ae6565b95945050505050565b61084a8062002b2883390190565b6001600160a01b03811681146200166757600080fd5b600080604083850312156200251357600080fd5b8235915060208301356200252781620024e9565b809150509250929050565b81515181526101a0810160208301516200255760208401826001600160801b03169052565b5060408301516200257360408401826001600160801b03169052565b5060608301516200258f60608401826001600160801b03169052565b506080830151620025ab60808401826001600160801b03169052565b5060a0830151620025c560a084018264ffffffffff169052565b5060c0830151620025df60c084018264ffffffffff169052565b5060e0830151620025f960e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b03908116918401919091526101809384015116929091019190915290565b6000602082840312156200266d57600080fd5b5035919050565b803561ffff8116811462000a9657600080fd5b803564ffffffffff8116811462000a9657600080fd5b60008060008060008060c08789031215620026b757600080fd5b620026c28762002674565b9550620026d26020880162002674565b945060408701356001600160801b0381168114620026ef57600080fd5b9350620026ff6060880162002687565b92506200270f6080880162002687565b91506200271f60a0880162002687565b90509295509295509295565b6000806000606084860312156200274157600080fd5b8335925060208401356200275581620024e9565b9150620027656040850162002674565b90509250925092565b80151581146200166757600080fd5b6000602082840312156200279057600080fd5b813562001e93816200276e565b600060208284031215620027b057600080fd5b813567ffffffffffffffff811115620027c857600080fd5b82016080818503121562001e9357600080fd5b600060208284031215620027ee57600080fd5b813562001e9381620024e9565b6000602082840312156200280e57600080fd5b813567ffffffffffffffff8111156200282657600080fd5b8201610100818503121562001e9357600080fd5b6000815180845260005b81811015620028625760208185018101518683018201520162002844565b8181111562002875576000602083870101525b50601f01601f19169290920160200192915050565b60208152600062001e9360208301846200283a565b600060208284031215620028b257600080fd5b5051919050565b600060208284031215620028cc57600080fd5b815162001e9381620024e9565b634e487b7160e01b600052601160045260246000fd5b600082821015620029045762002904620028d9565b500390565b6000602082840312156200291c57600080fd5b815162001e93816200276e565b6000808335601e198436030181126200294157600080fd5b83018035915067ffffffffffffffff8211156200295d57600080fd5b6020019150368190038213156200297357600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038916815287602082015260a060408201526000620029cd60a08301888a6200297a565b8281036060840152620029e28187896200297a565b90508281036080840152620029f98185876200297a565b9b9a5050505050505050505050565b60006020828403121562002a1b57600080fd5b813560ff8116811462001e9357600080fd5b6001600160a01b038a811682528916602082015260ff8816604082015260c06060820181905260009062002a65908301888a6200297a565b828103608084015262002a7a8187896200297a565b905082810360a084015262002a918185876200297a565b9c9b505050505050505050505050565b60008262002abf57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161562002ae15762002ae1620028d9565b500290565b6000821982111562002afc5762002afc620028d9565b500190565b6001600160a01b0383168152604060208201819052600090620020e8908301846200283a56fe60a060405234801561001057600080fd5b5060405161084a38038061084a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161079c6100ae600039600081816101130152818161015801528181610211015281816103510152818161037a015261049e015261079c6000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b14610087578063d1f57894146100b8578063f851a440146100cb575b6100526100e0565b005b34801561006057600080fd5b5061005261006f366004610543565b610108565b610052610082366004610565565b61014d565b34801561009357600080fd5b5061009c610204565b6040516001600160a01b03909116815260200160405180910390f35b6100526100c63660046105fe565b610256565b3480156100d757600080fd5b5061009c610344565b6100e861039c565b6101066101016000805160206107478339815191525490565b6103a4565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561014557610142816103c8565b50565b6101426100e0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101f757610187836103c8565b6000836001600160a01b031683836040516101a39291906106c0565b600060405180830381855af49150503d80600081146101de576040519150601f19603f3d011682016040523d82523d6000602084013e6101e3565b606091505b50509050806101f157600080fd5b50505050565b6101ff6100e0565b505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561024b57506000805160206107478339815191525490565b6102536100e0565b90565b600061026e6000805160206107478339815191525490565b6001600160a01b03161461028157600080fd5b6102ac60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6106d0565b600080516020610747833981519152146102c8576102c86106f5565b6102d182610408565b805115610340576000826001600160a01b0316826040516102f2919061070b565b600060405180830381855af49150503d806000811461032d576040519150601f19603f3d011682016040523d82523d6000602084013e610332565b606091505b50509050806101ff57600080fd5b5050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561024b57507f000000000000000000000000000000000000000000000000000000000000000090565b610106610493565b3660008037600080366000845af43d6000803e8080156103c3573d6000f35b3d6000fd5b6103d181610408565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b6104815760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060648201526084015b60405180910390fd5b60008051602061074783398151915255565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101065760405162461bcd60e51b815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527137b6903a343290383937bc3c9030b236b4b760711b6064820152608401610478565b80356001600160a01b038116811461053e57600080fd5b919050565b60006020828403121561055557600080fd5b61055e82610527565b9392505050565b60008060006040848603121561057a57600080fd5b61058384610527565b9250602084013567ffffffffffffffff808211156105a057600080fd5b818601915086601f8301126105b457600080fd5b8135818111156105c357600080fd5b8760208285010111156105d557600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561061157600080fd5b61061a83610527565b9150602083013567ffffffffffffffff8082111561063757600080fd5b818501915085601f83011261064b57600080fd5b81358181111561065d5761065d6105e8565b604051601f8201601f19908116603f01168101908382118183101715610685576106856105e8565b8160405282815288602084870101111561069e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b8183823760009101908152919050565b6000828210156106f057634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825160005b8181101561072c5760208186018101518583015201610712565b8181111561073b576000828501525b50919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220da8377213e8c600ec5301a1e6bd2f4f5cf7cfe5474ad7981fe546f74eab0ce9b64736f6c63430008090033a264697066735822122031e6d599eb27251d10ed3ed0c24500daa1316b1c40848794f606edc27ef6a91d64736f6c63430008090033";

type LendingPoolConstructorParams =
  | [linkLibraryAddresses: LendingPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LendingPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LendingPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(overrides || {}) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}

export interface LendingPoolLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
