/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LendingPool, LendingPoolInterface } from "../LendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentLiquidityRate",
        type: "int256",
      },
    ],
    name: "NetValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "PurchaseEndTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "RedemptionBeginTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "LENDINGPOOL_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "currentLiquidityRate",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "softUpperLimit",
            type: "uint128",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "softUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newPurchaseEndTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newRedemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheRedemptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "updateFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50603480546001600160a01b0319169055612a49806100346000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c806386601372116100ad578063bedb86fb11610071578063bedb86fb14610397578063c0342dc8146103aa578063c4d66de8146103bd578063e0b8ff73146103d0578063fe65acfe146103e357600080fd5b8063866013721461034e5780638afaff02146103615780638e589df71461036957806396c2614c1461037c5780639b8d6d381461038457600080fd5b806320086d9b116100f457806320086d9b146102d6578063585e5d20146102e95780635c975abb146102fc5780636bd50cef146103125780636c3fbb801461033b57600080fd5b8062f714ce1461012557806305bef05e1461014b5780630ad40df1146102ae5780630cee1725146102c3575b600080fd5b6101386101333660046124bf565b6103fe565b6040519081526020015b60405180910390f35b6102a1604080516101e08101825260006101c08201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101e0810182526035546101c0820190815281526036546001600160801b038082166020840152600160801b91829004600f0b938301939093526037548084166060840152048216608082015260385464ffffffffff80821660a0840152600160281b8204811660c0840152600160501b8204811660e0840152600160781b82041661010083015261ffff600160a01b82048116610120840152600160b01b909104166101408201526039546001600160a01b03908116610160830152603a5416610180820152603b549091166101a082015290565b60405161014291906124ef565b6102c16102bc366004612620565b6106e6565b005b6101386102d1366004612620565b6107ab565b6102c16102e436600461264e565b610b2f565b6102c16102f7366004612620565b610c96565b603c5460ff166040519015158152602001610142565b604080516020808201835260009091528151808201835260355490819052915191825201610142565b6102c1610349366004612669565b610e60565b6102c161035c366004612620565b610f9e565b610138600581565b6102c16103773660046126c0565b6112ec565b610138611643565b610138610392366004612746565b611654565b6102c16103a5366004612792565b611a18565b6102c16103b836600461264e565b611b4a565b6102c16103cb3660046127af565b611cc9565b6102c16103de3660046127af565b611d9b565b6034546040516001600160a01b039091168152602001610142565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff16156104475760405162461bcd60e51b815260040161043e91906127cc565b60405180910390fd5b506039546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190612821565b9050846000198114156104d85750805b6040805180820190915260018152603160f81b60208201524290876105105760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603560f81b60208201528388111561054a5760405162461bcd60e51b815260040161043e91906127cc565b5060385464ffffffffff600160281b9091048116908216108015906105a0575060385464ffffffffff600160501b909104811690821610806105a0575060385464ffffffffff600160781b909104811690821610155b604051806040016040528060018152602001603760f81b815250906105d85760405162461bcd60e51b815260040161043e91906127cc565b506035546040805180820190915260018152601960f91b60208201526101009091161515908161061b5760405162461bcd60e51b815260040161043e91906127cc565b50603654604051636b81068560e11b81523360048201526001600160a01b038981166024830152604482018690526001600160801b0390921660648201529086169063d7020d0a90608401600060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b50506040518581526001600160a01b038a1692503391507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509093505050505b92915050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561072a57600080fd5b505afa15801561073e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610762919061283a565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906107a55760405162461bcd60e51b815260040161043e91906127cc565b50603555565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff16156107eb5760405162461bcd60e51b815260040161043e91906127cc565b5060345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801561083057600080fd5b505afa158015610844573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610868919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906108ab5760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603160f81b60208201524290836108e45760405162461bcd60e51b815260040161043e91906127cc565b50603854600160501b900464ffffffffff1681108015906109145750603854600160781b900464ffffffffff1681105b604051806040016040528060018152602001603960f81b8152509061094c5760405162461bcd60e51b815260040161043e91906127cc565b50603954604080516358b50cef60e11b8152905185926001600160a01b0316918291600091839163b16a19de91600481810192602092909190829003018186803b15801561099957600080fd5b505afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d1919061283a565b9050600019871415610a59576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a082319060240160206040518083038186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a569190612821565b93505b603a54604051634efecaa560e01b81526001600160a01b0391821660048201526024810186905290831690634efecaa590604401602060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf9190612821565b50603a546040518581526001600160a01b03909116907fdcbc04a15249e560179846f4ed762c63956382a0d6e4972fa2b4939a184613ca9060200160405180910390a2509193505050505b919050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b81525090610bee5760405162461bcd60e51b815260040161043e91906127cc565b5060385464ffffffffff600160501b909104811690821611610c0f57600080fd5b4264ffffffffff168164ffffffffff161015610c2a57600080fd5b6038805464ffffffffff838116600160781b81810264ffffffffff60781b1985161790945560408051949093049091168084526020840191909152917fe4c41315b69a185c0a470f338694a4c8006faecac42081b6a7978c4a5c70fa6891015b60405180910390a15050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015610cda57600080fd5b505afa158015610cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d12919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b81525090610d555760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603160f81b602082015281610d8c5760405162461bcd60e51b815260040161043e91906127cc565b50603954604080516358b50cef60e11b815290516001600160a01b0390921691600091839163b16a19de91600481810192602092909190829003018186803b158015610dd757600080fd5b505afa158015610deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0f919061283a565b9050610e266001600160a01b038216338486611ee6565b60405183815233907f04d1e3db499c88d526b5839da3d76fbdda6fd7310b9aa71a624f2002ef73f95f9060200160405180910390a2505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b158015610ea457600080fd5b505afa158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc919061283a565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610f1f5760405162461bcd60e51b815260040161043e91906127cc565b5060405163220e4eef60e21b8152603560048201526001600160a01b0380841660248301528216604482015273__$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b158015610f8257600080fd5b505af4158015610f96573d6000803e3d6000fd5b505050505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015610fe257600080fd5b505afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b8152509061105d5760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603160f81b6020820152816110945760405162461bcd60e51b815260040161043e91906127cc565b50603854429064ffffffffff600160501b9091048116908216108015906110ce575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906111065760405162461bcd60e51b815260040161043e91906127cc565b506039546040805163b1bf962d60e01b815290516001600160a01b0390921691600091839163b1bf962d91600481810192602092909190829003018186803b15801561115157600080fd5b505afa158015611165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111899190612821565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c657600080fd5b505afa1580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe9190612821565b905061120d6035868487611f88565b7fdf9cc56642031d66906385d61d96c81f52e6ed903d39629da900bf8b67e884e381846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561126857600080fd5b505afa15801561127c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a09190612821565b6037546036546040805194855260208501939093526001600160801b03918216848401529081166060840152600160801b9004600f0b6080830152519081900360a00190a15050505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801561133057600080fd5b505afa158015611344573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611368919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906113ab5760405162461bcd60e51b815260040161043e91906127cc565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b90910481164290911610156113fc5760405162461bcd60e51b815260040161043e91906127cc565b5060385464ffffffffff600160781b90910481169084161080159061142e57508164ffffffffff168364ffffffffff16105b801561144757508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b815250906114805760405162461bcd60e51b815260040161043e91906127cc565b506038805461ffff888116600160b01b0261ffff60b01b19918b16600160a01b029190911663ffffffff60a01b1990921691909117179055603780546001600160801b03808816600160801b0291161790556114dc6035612123565b603780546001600160801b03929092166001600160801b031992831681179091556036805490921617905561152761151d6b033b2e3c9fd0803ce800000090565b8861ffff166121ef565b6115309061286d565b603680546001600160801b03908116600160801b93821693909302929092179055603880546effffffffffffffffffff00000000001916600160281b64ffffffffff87811691820264ffffffffff60501b191692909217600160501b8784169081029190911773ffffffffff00000000000000000000ffffffffff1916600160781b93871693840264ffffffffff1916178117909355603b80546001600160801b03191689861617905560375460408051919095168152602081019190915292830191909152606082015261ffff8089166080830152871660a08201527f690b9d63be57b307a8560c124fdcdada8871409db42c5f79fb205a8b93e5e61b9060c00160405180910390a150505050505050565b600061164f6035612123565b905090565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff16156116945760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603160f81b6020820152846116cb5760405162461bcd60e51b815260040161043e91906127cc565b50426000806116e96035546101008116151591610200909116151590565b603854919350915064ffffffffff600160281b909104811690841610801590611743575060385464ffffffffff600160501b90910481169084161080611743575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b8152509061177b5760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152601960f91b6020820152826117b25760405162461bcd60e51b815260040161043e91906127cc565b506040805180820190915260018152603360f81b602082015281156117ea5760405162461bcd60e51b815260040161043e91906127cc565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b15801561183657600080fd5b505afa15801561184a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186e9190612821565b60375461188b9190600160801b90046001600160801b031661288a565b9050808a1115611899578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b1580156118f757600080fd5b505af115801561190b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192f91906128a1565b506119b833848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561196f57600080fd5b505afa158015611983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a7919061283a565b6001600160a01b0316929190611ee6565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d604051611a0291815260200190565b60405180910390a4509798975050505050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b158015611a5c57600080fd5b505afa158015611a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a94919061283a565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090611ad75760405162461bcd60e51b815260040161043e91906127cc565b50603c805460ff191682151590811790915560ff1615611b1d576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b158015611b8e57600080fd5b505afa158015611ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc6919061283a565b6001600160a01b03161460405180604001604052806002815260200161064760f31b81525090611c095760405162461bcd60e51b815260040161043e91906127cc565b5060385464ffffffffff600160501b909104811690821610611c2a57600080fd5b60385464ffffffffff600160281b909104811690821611611c4a57600080fd5b4264ffffffffff168164ffffffffff161015611c6557600080fd5b6038805464ffffffffff838116600160501b81810264ffffffffff60501b1985161790945560408051949093049091168084526020840191909152917fd70f9ec33fb358b9b35ba27c3022b8f100dea4e0f0cdf87b66de3cfd7f08cc429101610c8a565b60015460059060ff1680611cdc5750303b155b80611ce8575060005481115b611d4b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b606482015260840161043e565b60015460ff16158015611d6a576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b0385161790558015611d96576001805460ff191690555b505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b158015611ddf57600080fd5b505afa158015611df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e17919061283a565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090611e5a5760405162461bcd60e51b815260040161043e91906127cc565b50604080518082019091526002815261034360f41b60208201526001600160a01b038216611e9b5760405162461bcd60e51b815260040161043e91906127cc565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1611f2b573d6000803e3d6000fd5b50611f358561223c565b611f815760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604482015260640161043e565b5050505050565b6003840154600090611fa890600160501b900464ffffffffff168361288a565b600286015490915060009081906001600160801b0316818188111561202c57611fe9611fd4838a61288a565b60038b0154600160b01b900461ffff166121ef565b60038a0154909350612007908990600160a01b900461ffff166121ef565b60038a0154909450612025908990600160a01b900461ffff166128be565b9050612068565b6003890154612047908390600160a01b900461ffff166121ef565b60038a0154909450612065908390600160a01b900461ffff166128be565b90505b6000836301e1338061207a88886128be565b61208491906128f3565b61208e908b61288a565b612098919061288a565b90506127106120a783836122e5565b6120b191906128f3565b60018b0180546001600160801b0319166001600160801b03841617905591506120d98261286d565b60018b0180546001600160801b03928316600160801b0292169190911790555050506003909601805464ffffffffff90941664ffffffffff19909416939093179092555050505050565b600381015460009064ffffffffff808216914291600160501b90910481169082161161215c57505050600101546001600160801b031690565b600384015464ffffffffff600160781b9091048116908216111561218f57506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff1611156121dc5760018401546121d4906001600160801b038116906121ce90600160801b9004600f0b84866123bb565b9061240d565b949350505050565b505050600101546001600160801b031690565b60008215806121fc575081155b15612209575060006106e0565b6127106122176002826128f3565b61222184866128be565b61222b9190612907565b61223591906128f3565b9392505050565b6000612262565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156122a157602081146122d25761229c7f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612243565b6122df565b823b6122c9576122c97311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612243565b600191506122df565b3d6000803e600051151591505b50919050565b604080518082019091526002815261035360f41b60208201526000908261231f5760405162461bcd60e51b815260040161043e91906127cc565b50600061232d6002846128f3565b90506b033b2e3c9fd0803ce80000006123488260001961288a565b61235291906128f3565b84111560405180604001604052806002815260200161068760f31b8152509061238e5760405162461bcd60e51b815260040161043e91906127cc565b5082816123a76b033b2e3c9fd0803ce8000000876128be565b6123b19190612907565b6121d491906128f3565b6000806123d264ffffffffff80851690861661288a565b90506b033b2e3c9fd0803ce80000006301e133806123f0838861291f565b6123fa91906129a4565b61240491906129d2565b95945050505050565b600082158061241a575081155b15612427575060006106e0565b8161243f60026b033b2e3c9fd0803ce80000006128f3565b61244b9060001961288a565b61245591906128f3565b83111560405180604001604052806002815260200161068760f31b815250906124915760405162461bcd60e51b815260040161043e91906127cc565b506b033b2e3c9fd0803ce80000006122176002826128f3565b6001600160a01b0381168114611b4757600080fd5b600080604083850312156124d257600080fd5b8235915060208301356124e4816124aa565b809150509250929050565b81515181526101c08101602083015161251360208401826001600160801b03169052565b5060408301516125286040840182600f0b9052565b50606083015161254360608401826001600160801b03169052565b50608083015161255e60808401826001600160801b03169052565b5060a083015161257760a084018264ffffffffff169052565b5060c083015161259060c084018264ffffffffff169052565b5060e08301516125a960e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b039081169184019190915261018080850151909116908301526101a0928301516001600160801b0316929091019190915290565b60006020828403121561263257600080fd5b5035919050565b803564ffffffffff81168114610b2a57600080fd5b60006020828403121561266057600080fd5b61223582612639565b6000806040838503121561267c57600080fd5b8235612687816124aa565b915060208301356124e4816124aa565b803561ffff81168114610b2a57600080fd5b80356001600160801b0381168114610b2a57600080fd5b600080600080600080600060e0888a0312156126db57600080fd5b6126e488612697565b96506126f260208901612697565b9550612700604089016126a9565b945061270e606089016126a9565b935061271c60808901612639565b925061272a60a08901612639565b915061273860c08901612639565b905092959891949750929550565b60008060006060848603121561275b57600080fd5b83359250602084013561276d816124aa565b915061277b60408501612697565b90509250925092565b8015158114611b4757600080fd5b6000602082840312156127a457600080fd5b813561223581612784565b6000602082840312156127c157600080fd5b8135612235816124aa565b600060208083528351808285015260005b818110156127f9578581018301518582016040015282016127dd565b8181111561280b576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561283357600080fd5b5051919050565b60006020828403121561284c57600080fd5b8151612235816124aa565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82141561288357612883612857565b5060000390565b60008282101561289c5761289c612857565b500390565b6000602082840312156128b357600080fd5b815161223581612784565b60008160001904831182151516156128d8576128d8612857565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612902576129026128dd565b500490565b6000821982111561291a5761291a612857565b500190565b60006001600160ff1b038184138284138082168684048611161561294557612945612857565b600160ff1b600087128281168783058912161561296457612964612857565b6000871292508782058712848416161561298057612980612857565b8785058712818416161561299657612996612857565b505050929093029392505050565b6000826129b3576129b36128dd565b600160ff1b8214600019841416156129cd576129cd612857565b500590565b600080821280156001600160ff1b03849003851316156129f4576129f4612857565b600160ff1b8390038412811615612a0d57612a0d612857565b5050019056fea26469706673582212204db376efc2e421950e975c024862fa67b9041460073431bceaeb289961ce147864736f6c63430008090033";

type LendingPoolConstructorParams =
  | [linkLibraryAddresses: LendingPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LendingPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LendingPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(overrides || {}) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}

export interface LendingPoolLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
