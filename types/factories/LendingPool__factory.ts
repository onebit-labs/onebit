/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LendingPool, LendingPoolInterface } from "../LendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentLiquidityRate",
        type: "int256",
      },
    ],
    name: "NetValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "PurchaseEndTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "RedemptionBeginTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RemoveFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "LENDINGPOOL_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchAddToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchRemoveFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "currentLiquidityRate",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "softUpperLimit",
            type: "uint128",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "softUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newPurchaseEndTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newRedemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheRedemptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "updateFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b15801561136557600080fd5b505af4158015611379573d6000803e3d6000fd5b505050505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b1580156113c557600080fd5b505afa1580156113d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fd9190612ef4565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906114405760405162461bcd60e51b81526004016104b69190612e86565b506040805180820190915260018152603160f81b6020820152816114775760405162461bcd60e51b81526004016104b69190612e86565b50603854429064ffffffffff600160501b9091048116908216108015906114b1575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906114e95760405162461bcd60e51b81526004016104b69190612e86565b506039546040805163b1bf962d60e01b815290516001600160a01b0390921691600091839163b1bf962d91600481810192602092909190829003018186803b15801561153457600080fd5b505afa158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c9190612edb565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a957600080fd5b505afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e19190612edb565b90506115f060358684876125cd565b7fdf9cc56642031d66906385d61d96c81f52e6ed903d39629da900bf8b67e884e381846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561164b57600080fd5b505afa15801561165f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116839190612edb565b6037546036546040805194855260208501939093526001600160801b03918216848401529081166060840152600160801b9004600f0b6080830152519081900360a00190a15050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561171357600080fd5b505afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190612ef4565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061178e5760405162461bcd60e51b81526004016104b69190612e86565b506001600160a01b0381166000818152603d6020526040808220805460ff19169055517f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c29190a250565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118549190612ef4565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906118975760405162461bcd60e51b81526004016104b69190612e86565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b90910481164290911610156118e85760405162461bcd60e51b81526004016104b69190612e86565b5060385464ffffffffff600160781b90910481169084161080159061191a57508164ffffffffff168364ffffffffff16105b801561193357508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b8152509061196c5760405162461bcd60e51b81526004016104b69190612e86565b506038805461ffff888116600160b01b0261ffff60b01b19918b16600160a01b029190911663ffffffff60a01b1990921691909117179055603780546001600160801b03808816600160801b0291161790556119c86035612768565b603780546001600160801b03929092166001600160801b0319928316811790915560368054909216179055611a13611a096b033b2e3c9fd0803ce800000090565b8861ffff16612834565b611a1c90612f58565b603680546001600160801b03908116600160801b93821693909302929092179055603880546effffffffffffffffffff00000000001916600160281b64ffffffffff87811691820264ffffffffff60501b191692909217600160501b8784169081029190911773ffffffffff00000000000000000000ffffffffff1916600160781b93871693840264ffffffffff1916178117909355603b80546001600160801b03191689861617905560375460408051919095168152602081019190915292830191909152606082015261ffff8089166080830152871660a08201527f690b9d63be57b307a8560c124fdcdada8871409db42c5f79fb205a8b93e5e61b9060c00160405180910390a150505050505050565b6000611b3b6035612768565b905090565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615611b805760405162461bcd60e51b81526004016104b69190612e86565b50336000908152603d602090815260409182902054825180840190935260028352611b1b60f11b9183019190915260ff16611bce5760405162461bcd60e51b81526004016104b69190612e86565b506040805180820190915260018152603160f81b602082015284611c055760405162461bcd60e51b81526004016104b69190612e86565b5042600080611c236035546101008116151591610200909116151590565b603854919350915064ffffffffff600160281b909104811690841610801590611c7d575060385464ffffffffff600160501b90910481169084161080611c7d575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b81525090611cb55760405162461bcd60e51b81526004016104b69190612e86565b506040805180820190915260018152601960f91b602082015282611cec5760405162461bcd60e51b81526004016104b69190612e86565b506040805180820190915260018152603360f81b60208201528115611d245760405162461bcd60e51b81526004016104b69190612e86565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b158015611d7057600080fd5b505afa158015611d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da89190612edb565b603754611dc59190600160801b90046001600160801b0316612f75565b9050808a1115611dd3578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b158015611e3157600080fd5b505af1158015611e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e699190612f8c565b50611ef233848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ea957600080fd5b505afa158015611ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee19190612ef4565b6001600160a01b031692919061252b565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d604051611f3c91815260200190565b60405180910390a4509798975050505050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b158015611f9657600080fd5b505afa158015611faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fce9190612ef4565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906120115760405162461bcd60e51b81526004016104b69190612e86565b50603c805460ff191682151590811790915560ff1615612057576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b1580156120c857600080fd5b505afa1580156120dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121009190612ef4565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906121435760405162461bcd60e51b81526004016104b69190612e86565b5060385464ffffffffff600160501b90910481169082161061216457600080fd5b60385464ffffffffff600160281b90910481169082161161218457600080fd5b4264ffffffffff168164ffffffffff16101561219f57600080fd5b6038805464ffffffffff838116600160501b81810264ffffffffff60501b1985161790945560408051949093049091168084526020840191909152917fd70f9ec33fb358b9b35ba27c3022b8f100dea4e0f0cdf87b66de3cfd7f08cc429101610ee1565b60015460069060ff16806122165750303b155b80612222575060005481115b6122855760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084016104b6565b60015460ff161580156122a4576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b0385161790558015610938576001805460ff19169055505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561231857600080fd5b505afa15801561232c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123509190612ef4565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906123935760405162461bcd60e51b81526004016104b69190612e86565b50604080518082019091526002815261034360f41b60208201526001600160a01b0382166123d45760405162461bcd60e51b81526004016104b69190612e86565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561246357600080fd5b505afa158015612477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249b9190612ef4565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906124de5760405162461bcd60e51b81526004016104b69190612e86565b506001600160a01b0381166000818152603d6020526040808220805460ff19166001179055517fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab039190a250565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1612570573d6000803e3d6000fd5b5061257a85612881565b6125c65760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016104b6565b5050505050565b60038401546000906125ed90600160501b900464ffffffffff1683612f75565b600286015490915060009081906001600160801b031681818811156126715761262e612619838a612f75565b60038b0154600160b01b900461ffff16612834565b60038a015490935061264c908990600160a01b900461ffff16612834565b60038a015490945061266a908990600160a01b900461ffff16612fa9565b90506126ad565b600389015461268c908390600160a01b900461ffff16612834565b60038a01549094506126aa908390600160a01b900461ffff16612fa9565b90505b6000836301e133806126bf8888612fa9565b6126c99190612fde565b6126d3908b612f75565b6126dd9190612f75565b90506127106126ec838361292a565b6126f69190612fde565b60018b0180546001600160801b0319166001600160801b038416179055915061271e82612f58565b60018b0180546001600160801b03928316600160801b0292169190911790555050506003909601805464ffffffffff90941664ffffffffff19909416939093179092555050505050565b600381015460009064ffffffffff808216914291600160501b9091048116908216116127a157505050600101546001600160801b031690565b600384015464ffffffffff600160781b909104811690821611156127d457506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff161115612821576001840154612819906001600160801b0381169061281390600160801b9004600f0b8486612a00565b90612a52565b949350505050565b505050600101546001600160801b031690565b6000821580612841575081155b1561284e575060006107a6565b61271061285c600282612fde565b6128668486612fa9565b6128709190612ff2565b61287a9190612fde565b9392505050565b60006128a7565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156128e65760208114612917576128e17f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612888565b612924565b823b61290e5761290e7311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612888565b60019150612924565b3d6000803e600051151591505b50919050565b604080518082019091526002815261035360f41b6020820152600090826129645760405162461bcd60e51b81526004016104b69190612e86565b506000612972600284612fde565b90506b033b2e3c9fd0803ce800000061298d82600019612f75565b6129979190612fde565b84111560405180604001604052806002815260200161068760f31b815250906129d35760405162461bcd60e51b81526004016104b69190612e86565b5082816129ec6b033b2e3c9fd0803ce800000087612fa9565b6129f69190612ff2565b6128199190612fde565b600080612a1764ffffffffff808516908616612f75565b90506b033b2e3c9fd0803ce80000006301e13380612a35838861300a565b612a3f919061308f565b612a4991906130bd565b95945050505050565b6000821580612a5f575081155b15612a6c575060006107a6565b81612a8460026b033b2e3c9fd0803ce8000000612fde565b612a9090600019612f75565b612a9a9190612fde565b83111560405180604001604052806002815260200161068760f31b81525090612ad65760405162461bcd60e51b81526004016104b69190612e86565b506b033b2e3c9fd0803ce800000061285c600282612fde565b6001600160a01b038116811461208157600080fd5b60008060408385031215612b1757600080fd5b823591506020830135612b2981612aef565b809150509250929050565b60008060208385031215612b4757600080fd5b823567ffffffffffffffff80821115612b5f57600080fd5b818501915085601f830112612b7357600080fd5b813581811115612b8257600080fd5b8660208260051b8501011115612b9757600080fd5b60209290920196919550909350505050565b81515181526101c081016020830151612bcd60208401826001600160801b03169052565b506040830151612be26040840182600f0b9052565b506060830151612bfd60608401826001600160801b03169052565b506080830151612c1860808401826001600160801b03169052565b5060a0830151612c3160a084018264ffffffffff169052565b5060c0830151612c4a60c084018264ffffffffff169052565b5060e0830151612c6360e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b039081169184019190915261018080850151909116908301526101a0928301516001600160801b0316929091019190915290565b600060208284031215612cec57600080fd5b5035919050565b803564ffffffffff81168114610d8157600080fd5b600060208284031215612d1a57600080fd5b61287a82612cf3565b60008060408385031215612d3657600080fd5b8235612d4181612aef565b91506020830135612b2981612aef565b600060208284031215612d6357600080fd5b813561287a81612aef565b803561ffff81168114610d8157600080fd5b80356001600160801b0381168114610d8157600080fd5b600080600080600080600060e0888a031215612db257600080fd5b612dbb88612d6e565b9650612dc960208901612d6e565b9550612dd760408901612d80565b9450612de560608901612d80565b9350612df360808901612cf3565b9250612e0160a08901612cf3565b9150612e0f60c08901612cf3565b905092959891949750929550565b600080600060608486031215612e3257600080fd5b833592506020840135612e4481612aef565b9150612e5260408501612d6e565b90509250925092565b801515811461208157600080fd5b600060208284031215612e7b57600080fd5b813561287a81612e5b565b600060208083528351808285015260005b81811015612eb357858101830151858201604001528201612e97565b81811115612ec5576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215612eed57600080fd5b5051919050565b600060208284031215612f0657600080fd5b815161287a81612aef565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612f5157612f51612f27565b5060010190565b6000600160ff1b821415612f6e57612f6e612f27565b5060000390565b600082821015612f8757612f87612f27565b500390565b600060208284031215612f9e57600080fd5b815161287a81612e5b565b6000816000190483118215151615612fc357612fc3612f27565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612fed57612fed612fc8565b500490565b6000821982111561300557613005612f27565b500190565b60006001600160ff1b038184138284138082168684048611161561303057613030612f27565b600160ff1b600087128281168783058912161561304f5761304f612f27565b6000871292508782058712848416161561306b5761306b612f27565b8785058712818416161561308157613081612f27565b505050929093029392505050565b60008261309e5761309e612fc8565b600160ff1b8214600019841416156130b8576130b8612f27565b500590565b600080821280156001600160ff1b03849003851316156130df576130df612f27565b600160ff1b83900384128116156130f8576130f8612f27565b5050019056fea2646970667358221220430b2b7233cb381bbcccfcb4573972e0f2d122ff3a8a16289f1f74dced888c0664736f6c63430008090033";

type LendingPoolConstructorParams =
  | [linkLibraryAddresses: LendingPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LendingPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LendingPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(overrides || {}) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}

export interface LendingPoolLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
