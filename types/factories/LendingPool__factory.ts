/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { LendingPool, LendingPoolInterface } from "../LendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referral",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newFundAddress",
        type: "address",
      },
    ],
    name: "FundAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentLiquidityRate",
        type: "int256",
      },
    ],
    name: "NetValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousLiquidityIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "PurchaseEndTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "previousTimestamp",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "newTimetamp",
        type: "uint40",
      },
    ],
    name: "RedemptionBeginTimestampMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RemoveFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newExpiration",
        type: "uint256",
      },
    ],
    name: "WhitelistExpirationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "LENDINGPOOL_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchAddToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchRemoveFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressesProvider",
    outputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ReserveConfigurationMap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "data",
                type: "uint256",
              },
            ],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "currentLiquidityRate",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "previousLiquidityIndex",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "purchaseUpperLimit",
            type: "uint128",
          },
          {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "purchaseEndTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "redemptionBeginTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "managementFeeRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "performanceFeeRate",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "oTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundAddress",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "softUpperLimit",
            type: "uint128",
          },
        ],
        internalType: "struct DataTypes.ReserveData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveNormalizedIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "initReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILendingPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managementFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "performanceFeeRate",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "purchaseUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "softUpperLimit",
        type: "uint128",
      },
      {
        internalType: "uint40",
        name: "purchaseBeginTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "purchaseEndTimestamp",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "redemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "initializeNextPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isInWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newPurchaseEndTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newRedemptionBeginTimestamp",
        type: "uint40",
      },
    ],
    name: "moveTheRedemptionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
    ],
    name: "setFuncAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "setWhitelistExpiration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netValue",
        type: "uint256",
      },
    ],
    name: "updateNetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b1580156113f357600080fd5b505af4158015611407573d6000803e3d6000fd5b505050505050565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801561145357600080fd5b505afa158015611467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148b919061308b565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906114ce5760405162461bcd60e51b8152600401610542919061301d565b506040805180820190915260018152603160f81b6020820152816115055760405162461bcd60e51b8152600401610542919061301d565b50603854429064ffffffffff600160501b90910481169082161080159061153f575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906115775760405162461bcd60e51b8152600401610542919061301d565b506039546040805163b1bf962d60e01b815290516001600160a01b0390921691600091839163b1bf962d91600481810192602092909190829003018186803b1580156115c257600080fd5b505afa1580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190613072565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163757600080fd5b505afa15801561164b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166f9190613072565b905061167e6035868487612764565b7fdf9cc56642031d66906385d61d96c81f52e6ed903d39629da900bf8b67e884e381846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116d957600080fd5b505afa1580156116ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117119190613072565b6037546036546040805194855260208501939093526001600160801b03918216848401529081166060840152600160801b9004600f0b6080830152519081900360a00190a15050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b1580156117a157600080fd5b505afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d9919061308b565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061181c5760405162461bcd60e51b8152600401610542919061301d565b506001600160a01b0381166000818152603e6020526040808220829055517f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c29190a250565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b1580156118a557600080fd5b505afa1580156118b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118dd919061308b565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906119205760405162461bcd60e51b8152600401610542919061301d565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b90910481164290911610156119715760405162461bcd60e51b8152600401610542919061301d565b5060385464ffffffffff600160781b9091048116908416108015906119a357508164ffffffffff168364ffffffffff16105b80156119bc57508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b815250906119f55760405162461bcd60e51b8152600401610542919061301d565b506038805461ffff888116600160b01b0261ffff60b01b19918b16600160a01b029190911663ffffffff60a01b1990921691909117179055603780546001600160801b03808816600160801b029116179055611a5160356128ff565b603780546001600160801b03929092166001600160801b0319928316811790915560368054909216179055611a9c611a926b033b2e3c9fd0803ce800000090565b8861ffff166129cb565b611aa590613107565b603680546001600160801b03908116600160801b93821693909302929092179055603880546effffffffffffffffffff00000000001916600160281b64ffffffffff87811691820264ffffffffff60501b191692909217600160501b8784169081029190911773ffffffffff00000000000000000000ffffffffff1916600160781b93871693840264ffffffffff1916178117909355603b80546001600160801b03191689861617905560375460408051919095168152602081019190915292830191909152606082015261ffff8089166080830152871660a08201527f690b9d63be57b307a8560c124fdcdada8871409db42c5f79fb205a8b93e5e61b9060c00160405180910390a150505050505050565b6000611bc460356128ff565b905090565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615611c095760405162461bcd60e51b8152600401610542919061301d565b506040805180820190915260018152603160f81b602082015284611c405760405162461bcd60e51b8152600401610542919061301d565b50336000908152603e602090815260409182902054825180840190935260028352611b1b60f11b918301919091524291908210611c905760405162461bcd60e51b8152600401610542919061301d565b50603554603854610100821615159161020016151590600160281b900464ffffffffff90811690841610801590611cf8575060385464ffffffffff600160501b90910481169084161080611cf8575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b81525090611d305760405162461bcd60e51b8152600401610542919061301d565b506040805180820190915260018152601960f91b602082015282611d675760405162461bcd60e51b8152600401610542919061301d565b506040805180820190915260018152603360f81b60208201528115611d9f5760405162461bcd60e51b8152600401610542919061301d565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b158015611deb57600080fd5b505afa158015611dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e239190613072565b603754611e409190600160801b90046001600160801b0316613124565b9050808a1115611e4e578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b158015611eac57600080fd5b505af1158015611ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee4919061313b565b50611f6d33848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f2457600080fd5b505afa158015611f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5c919061308b565b6001600160a01b03169291906126c2565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d604051611fb791815260200190565b60405180910390a4509798975050505050505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061308b565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061208c5760405162461bcd60e51b8152600401610542919061301d565b50604080518082019091526002815261034360f41b60208201526001600160a01b0382166120cd5760405162461bcd60e51b8152600401610542919061301d565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b15801561215c57600080fd5b505afa158015612170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612194919061308b565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906121d75760405162461bcd60e51b8152600401610542919061301d565b50603c805460ff191682151590811790915560ff161561221d576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b60345460408051636d44f55d60e01b8152905133926001600160a01b031691636d44f55d916004808301926020929190829003018186803b15801561228e57600080fd5b505afa1580156122a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c6919061308b565b6001600160a01b03161460405180604001604052806002815260200161064760f31b815250906123095760405162461bcd60e51b8152600401610542919061301d565b5060385464ffffffffff600160501b90910481169082161061232a57600080fd5b60385464ffffffffff600160281b90910481169082161161234a57600080fd5b4264ffffffffff168164ffffffffff16101561236557600080fd5b6038805464ffffffffff838116600160501b81810264ffffffffff60501b1985161790945560408051949093049091168084526020840191909152917fd70f9ec33fb358b9b35ba27c3022b8f100dea4e0f0cdf87b66de3cfd7f08cc429101610f5e565b60015460069060ff16806123dc5750303b155b806123e8575060005481115b61244b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610542565b60015460ff1615801561246a576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b03851617905580156109b5576001805460ff19169055505050565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b1580156124de57600080fd5b505afa1580156124f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612516919061308b565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906125595760405162461bcd60e51b8152600401610542919061301d565b50603d8190556040518181527f0e036d270c02057c1efc67a26e42d8b96aeada233e8ef6ff0c9d481cf7fb72929060200160405180910390a150565b603454604080516385c858b160e01b8152905133926001600160a01b0316916385c858b1916004808301926020929190829003018186803b1580156125d957600080fd5b505afa1580156125ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612611919061308b565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906126545760405162461bcd60e51b8152600401610542919061301d565b506000603d544261266591906130ef565b6001600160a01b0383166000818152603e60205260409081902083905551919250907f62c1e066774519db9fe35767c15fc33df2f016675b7cc0c330ed185f286a2d52906126b69084815260200190565b60405180910390a25050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1612707573d6000803e3d6000fd5b5061271185612a18565b61275d5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610542565b5050505050565b600384015460009061278490600160501b900464ffffffffff1683613124565b600286015490915060009081906001600160801b03168181881115612808576127c56127b0838a613124565b60038b0154600160b01b900461ffff166129cb565b60038a01549093506127e3908990600160a01b900461ffff166129cb565b60038a0154909450612801908990600160a01b900461ffff16613158565b9050612844565b6003890154612823908390600160a01b900461ffff166129cb565b60038a0154909450612841908390600160a01b900461ffff16613158565b90505b6000836301e133806128568888613158565b612860919061318d565b61286a908b613124565b6128749190613124565b90506127106128838383612ac1565b61288d919061318d565b60018b0180546001600160801b0319166001600160801b03841617905591506128b582613107565b60018b0180546001600160801b03928316600160801b0292169190911790555050506003909601805464ffffffffff90941664ffffffffff19909416939093179092555050505050565b600381015460009064ffffffffff808216914291600160501b90910481169082161161293857505050600101546001600160801b031690565b600384015464ffffffffff600160781b9091048116908216111561296b57506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff1611156129b85760018401546129b0906001600160801b038116906129aa90600160801b9004600f0b8486612b97565b90612be9565b949350505050565b505050600101546001600160801b031690565b60008215806129d8575081155b156129e557506000610831565b6127106129f360028261318d565b6129fd8486613158565b612a0791906130ef565b612a11919061318d565b9392505050565b6000612a3e565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d8015612a7d5760208114612aae57612a787f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612a1f565b612abb565b823b612aa557612aa57311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612a1f565b60019150612abb565b3d6000803e600051151591505b50919050565b604080518082019091526002815261035360f41b602082015260009082612afb5760405162461bcd60e51b8152600401610542919061301d565b506000612b0960028461318d565b90506b033b2e3c9fd0803ce8000000612b2482600019613124565b612b2e919061318d565b84111560405180604001604052806002815260200161068760f31b81525090612b6a5760405162461bcd60e51b8152600401610542919061301d565b508281612b836b033b2e3c9fd0803ce800000087613158565b612b8d91906130ef565b6129b0919061318d565b600080612bae64ffffffffff808516908616613124565b90506b033b2e3c9fd0803ce80000006301e13380612bcc83886131a1565b612bd69190613226565b612be09190613254565b95945050505050565b6000821580612bf6575081155b15612c0357506000610831565b81612c1b60026b033b2e3c9fd0803ce800000061318d565b612c2790600019613124565b612c31919061318d565b83111560405180604001604052806002815260200161068760f31b81525090612c6d5760405162461bcd60e51b8152600401610542919061301d565b506b033b2e3c9fd0803ce80000006129f360028261318d565b6001600160a01b038116811461224757600080fd5b60008060408385031215612cae57600080fd5b823591506020830135612cc081612c86565b809150509250929050565b60008060208385031215612cde57600080fd5b823567ffffffffffffffff80821115612cf657600080fd5b818501915085601f830112612d0a57600080fd5b813581811115612d1957600080fd5b8660208260051b8501011115612d2e57600080fd5b60209290920196919550909350505050565b81515181526101c081016020830151612d6460208401826001600160801b03169052565b506040830151612d796040840182600f0b9052565b506060830151612d9460608401826001600160801b03169052565b506080830151612daf60808401826001600160801b03169052565b5060a0830151612dc860a084018264ffffffffff169052565b5060c0830151612de160c084018264ffffffffff169052565b5060e0830151612dfa60e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b039081169184019190915261018080850151909116908301526101a0928301516001600160801b0316929091019190915290565b600060208284031215612e8357600080fd5b8135612a1181612c86565b600060208284031215612ea057600080fd5b5035919050565b803564ffffffffff81168114610dfe57600080fd5b600060208284031215612ece57600080fd5b612a1182612ea7565b60008060408385031215612eea57600080fd5b8235612ef581612c86565b91506020830135612cc081612c86565b803561ffff81168114610dfe57600080fd5b80356001600160801b0381168114610dfe57600080fd5b600080600080600080600060e0888a031215612f4957600080fd5b612f5288612f05565b9650612f6060208901612f05565b9550612f6e60408901612f17565b9450612f7c60608901612f17565b9350612f8a60808901612ea7565b9250612f9860a08901612ea7565b9150612fa660c08901612ea7565b905092959891949750929550565b600080600060608486031215612fc957600080fd5b833592506020840135612fdb81612c86565b9150612fe960408501612f05565b90509250925092565b801515811461224757600080fd5b60006020828403121561301257600080fd5b8135612a1181612ff2565b600060208083528351808285015260005b8181101561304a5785810183015185820160400152820161302e565b8181111561305c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561308457600080fd5b5051919050565b60006020828403121561309d57600080fd5b8151612a1181612c86565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156130e8576130e86130be565b5060010190565b60008219821115613102576131026130be565b500190565b6000600160ff1b82141561311d5761311d6130be565b5060000390565b600082821015613136576131366130be565b500390565b60006020828403121561314d57600080fd5b8151612a1181612ff2565b6000816000190483118215151615613172576131726130be565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261319c5761319c613177565b500490565b60006001600160ff1b03818413828413808216868404861116156131c7576131c76130be565b600160ff1b60008712828116878305891216156131e6576131e66130be565b60008712925087820587128484161615613202576132026130be565b87850587128184161615613218576132186130be565b505050929093029392505050565b60008261323557613235613177565b600160ff1b82146000198414161561324f5761324f6130be565b500590565b600080821280156001600160ff1b0384900385131615613276576132766130be565b600160ff1b839003841281161561328f5761328f6130be565b5050019056fea2646970667358221220f4f579c15eabc59616ec49b4047b2ae3dba23ead109a75f05eecdf05ca492e5d64736f6c63430008090033";

type LendingPoolConstructorParams =
  | [linkLibraryAddresses: LendingPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LendingPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LendingPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(overrides || {}) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}

export interface LendingPoolLibraryAddresses {
  ["contracts/libraries/logic/ReserveLogic.sol:ReserveLogic"]: string;
}
